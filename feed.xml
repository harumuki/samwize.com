<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>@samwize</title>
    <description>¯\_(ツ)_/¯
</description>
    <link>http://samwize.com/</link>
    <atom:link href="http://samwize.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 06 Aug 2017 14:35:30 +0800</pubDate>
    <lastBuildDate>Sun, 06 Aug 2017 14:35:30 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>How Oracle screwed me for 2 months with an UNDERSCORE</title>
        <description>&lt;p&gt;&lt;em&gt;tldr; Don’t use an enterprise product. In this case Oracle’s Responsys/PushIO sucks badly.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This post is my rant on how bad an enterprise product from Oracle is.&lt;/p&gt;

&lt;h2 id=&quot;the-ridiculous-bug&quot;&gt;The ridiculous bug&lt;/h2&gt;

&lt;p&gt;I spent 2 months to figure out why our iOS app did not display rich message pushed from Oracle’s platform. It boils down to an UNDERSCORE.&lt;/p&gt;

&lt;p&gt;Yes, freaking &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;, generated in their API key is the reason why our app didn’t work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pushio-ridiculous-bug.jpg&quot; alt=&quot;&quot; class=&quot;border&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Quoting reply from developer support:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The bug is that your API key was generated with an underscore “_” and that is an invalid character for how the API key is used downstream.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The fix should be pretty straighforward… create a new platform until you get one without underscores in the API key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wow.&lt;/p&gt;

&lt;p&gt;It is an embarassing bug, but what appal me more is how they deal with it.&lt;/p&gt;

&lt;h2 id=&quot;a-major-bug&quot;&gt;A major bug&lt;/h2&gt;

&lt;p&gt;Firstly, the bug affects majority of their users, since it took me 3 tries, before getting a “valid” one.&lt;/p&gt;

&lt;p&gt;I estimate &lt;strong&gt;66% of users&lt;/strong&gt; could have generated “invalid” keys.&lt;/p&gt;

&lt;h2 id=&quot;not-fixing-their-sdk-quickly&quot;&gt;Not fixing their SDK quickly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pushio/PushIOManager_iOS/tags&quot;&gt;PushIO last release&lt;/a&gt; of their SDK is 16 Jun 2017, that is 2 months ago as of writing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I give them the benefit of doubt, as I assume the bug only appear in that release, though I do believe the bug happens way before version 6.32.1.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The point is, a major bug should be fixed quickly, yet it wasn’t.&lt;/p&gt;

&lt;p&gt;Not to mention this should be a easy fix. They could fix their API key generator probably in a few lines of code. Somehow they did not.&lt;/p&gt;

&lt;h2 id=&quot;lack-of-knowledge-on-the-issue&quot;&gt;Lack of knowledge on the issue&lt;/h2&gt;

&lt;p&gt;Our account manager and a couple of customer support officers did not know about the &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; issue, until it escalates to their developer.&lt;/p&gt;

&lt;p&gt;It could mean:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;They don’t have many users and this issue never came up&lt;/li&gt;
  &lt;li&gt;They have a problem with communicating and sharing of such knowledge&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Either way, as a user, I am less confident with Oracle.&lt;/p&gt;

&lt;h2 id=&quot;we-took-2-long-months&quot;&gt;We took 2 long months&lt;/h2&gt;

&lt;p&gt;Why so long?&lt;/p&gt;

&lt;p&gt;While trying to investigate the issue and isolate the problem, I asked a simple quesion: &lt;em&gt;&lt;strong&gt;Is there an iOS sample code?&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It took 2 weeks, before they finally have an answer – no, they don’t. Again, it reveals a lack of knowledgebase to such FAQ.&lt;/p&gt;

&lt;p&gt;Analyzing why a push fails is tedious and slow, because I have to &lt;strong&gt;wait till the next day&lt;/strong&gt; to check the logs from an &lt;strong&gt;FTP server&lt;/strong&gt;. It feels so 1990s.&lt;/p&gt;

&lt;p&gt;Reply from “enterprise support” isn’t lightning fast either. &lt;em&gt;I admit I don’t reply them fast too, but I have much more meaningful features to develop.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;a-problem-with-the-enterprise-suite-of-products&quot;&gt;A problem with the enterprise suite of products&lt;/h2&gt;

&lt;p&gt;Responsys is an enterprise email marketing tool – a slow and complicated web app. &lt;a href=&quot;https://mailchimp.com&quot;&gt;Mail Chimp&lt;/a&gt; will be it’s rival that is cool and user friendly.&lt;/p&gt;

&lt;p&gt;PushIO is a mobile push SDK, in a very crowded space since 2009 when Apple revolutionized push. Cool rivals include &lt;a href=&quot;https://www.urbanairship.com&quot;&gt;Urban Airship&lt;/a&gt; and &lt;a href=&quot;https://onesignal.com/&quot;&gt;OneSignal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In 2014, Oracle &lt;em&gt;eat&lt;/em&gt; Responsys, who in turn &lt;em&gt;eat&lt;/em&gt; PushIO – a &lt;a href=&quot;https://www.bizjournals.com/denver/blog/boosters_bits/2014/01/repsonsys-buys-push-io-before-being.html&quot;&gt;&lt;strong&gt;$1.5 billion acquisition&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;When a large corporation acquires a team and it’s product, it is the &lt;strong&gt;start of a downfall&lt;/strong&gt;. This case will be messier since a fat clumpsy fish eat a fish which eat another small fish.&lt;/p&gt;

&lt;p&gt;The small fish (PushIO) probably died tragically.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pushio-big-fish-eat-little-fish.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Aug 2017 00:25:18 +0800</pubDate>
        <link>http://samwize.com/2017/08/06/how-oracle-screwed-me-with-an-underscore/</link>
        <guid isPermaLink="true">http://samwize.com/2017/08/06/how-oracle-screwed-me-with-an-underscore/</guid>
        
        
        <category>Rant</category>
        
        <category>API</category>
        
      </item>
    
      <item>
        <title>WWDC 2017 - What&#39;s New in Foundation</title>
        <description>&lt;p&gt;Summary of what’s new in Foundation, Swift 4, from &lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2017/212/&quot;&gt;session 212&lt;/a&gt;. &lt;em&gt;Tip: You can download WWDC videos easily with &lt;a href=&quot;https://github.com/samwize/wwdc-dl&quot;&gt;wwdc-dl&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;key-paths&quot;&gt;Key Paths&lt;/h2&gt;

&lt;p&gt;Apple calls it Smart, because it is statically safe, and fast.&lt;/p&gt;

&lt;p&gt;It is built into Swift language, with a single &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/wwdc-foundation-keypath.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// To get via keypath&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ben&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;keyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Kid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// To set via keypaht&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ben&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;keyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Kid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nickname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Ben&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;appending-key-paths&quot;&gt;Appending Key Paths&lt;/h2&gt;

&lt;p&gt;You can append key path, provided the type you “chain” is the same.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/wwdc-foundation-keypath-appending.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So if you append, the final keypath is simply of type &lt;code class=&quot;highlighter-rouge&quot;&gt;Keypath&amp;lt;BirthdayParty, Double&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are more keypath types.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/wwdc-foundation-keypath-more.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;key-value-observation&quot;&gt;Key-Value Observation&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/wwdc-foundation-keypath-kvo.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// To use&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;observation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;observed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;change&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// observed is the updated &quot;mia&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;codablejson&quot;&gt;Codable/JSON&lt;/h2&gt;

&lt;p&gt;Swift also finally recognize the importance of JSON.&lt;/p&gt;

&lt;p&gt;You simply add the trait protocol &lt;code class=&quot;highlighter-rouge&quot;&gt;Codable&lt;/code&gt; to your model, and it will work (because of &lt;a href=&quot;http://samwize.com/2016/10/24/swift-protocol-development-guide/&quot;&gt;default protocol extension&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/wwdc-foundation-codable.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you want to customize the key names, you can simply add your own &lt;code class=&quot;highlighter-rouge&quot;&gt;CodingKeys&lt;/code&gt; as an enum in your model. See how the camel case “comment_count” is customized:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CodingKeys&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CodingKey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;author&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commentCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;comment_count&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ok, actually &lt;code class=&quot;highlighter-rouge&quot;&gt;Codable&lt;/code&gt; is not only for JSON data, but for &lt;a href=&quot;https://developer.apple.com/documentation/foundation/archives_and_serialization&quot;&gt;other formats&lt;/a&gt; like Property List too. There is &lt;code class=&quot;highlighter-rouge&quot;&gt;JSONDecoder&lt;/code&gt;, and also &lt;code class=&quot;highlighter-rouge&quot;&gt;PropertyListDecoder&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Aug 2017 16:17:08 +0800</pubDate>
        <link>http://samwize.com/2017/08/03/wwdc-2017-whats-new-in-foundation/</link>
        <guid isPermaLink="true">http://samwize.com/2017/08/03/wwdc-2017-whats-new-in-foundation/</guid>
        
        
        <category>Swift</category>
        
      </item>
    
      <item>
        <title>How to Use Git Bisect to Find the First Bad Commit</title>
        <description>&lt;p&gt;Git has a very powerful command for developers to &lt;strong&gt;systematically find the commit&lt;/strong&gt; that introduce a bug.&lt;/p&gt;

&lt;p&gt;You mark commits as &lt;code class=&quot;highlighter-rouge&quot;&gt;good&lt;/code&gt; OR &lt;code class=&quot;highlighter-rouge&quot;&gt;bad&lt;/code&gt;, and using divide-and-conquer strategy, you will find the first bad commit in a few pass (even with hundreds of commits).&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 1. Mark current branch that has the bug
git bisect bad

# 2. Mark a tag that is working, or use a commit SHA directly
git bisect good v1.2.3

# 3. Git will automatically checkout the commit between the good and bad
#    You will have to identify if that commit is good or bad, and mark with 
git bisect bad
# OR
git bisect good
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Eventually, you will find the first bad commit.&lt;/p&gt;

&lt;p&gt;You can return to your previous branch with &lt;code class=&quot;highlighter-rouge&quot;&gt;git bisect reset&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For more features, refer to &lt;a href=&quot;https://git-scm.com/docs/git-bisect/&quot;&gt;git-scm doc&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-if-you-are-looking-for-the-first-change&quot;&gt;What if you are looking for the first change?&lt;/h2&gt;

&lt;p&gt;Sometimes, you are not finding the first commit that is &lt;strong&gt;bad&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Rather, you want to find the first commit that has &lt;strong&gt;new changes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Since Git v2.7.0, they introduced &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bad&lt;/code&gt; as new terms. If you want to use your own terms, or if you are using older version of git, you can define your terms.&lt;/p&gt;

&lt;p&gt;Example to have  &lt;code class=&quot;highlighter-rouge&quot;&gt;fixed&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;unfixed&lt;/code&gt;,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git bisect start --term-new=fixed --term-old=unfixed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then mark with,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git bisect fixed
git bisect unfixed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;what-is-the-very-first-commit-sha&quot;&gt;What is the very first commit SHA?&lt;/h2&gt;

&lt;p&gt;The “Initial Commit” SHA can be retrieved with:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rev-list --max-parents=0 HEAD&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Jul 2017 10:47:55 +0800</pubDate>
        <link>http://samwize.com/2017/07/27/how-to-use-git-bisect-to-find-the-first-bad-commit/</link>
        <guid isPermaLink="true">http://samwize.com/2017/07/27/how-to-use-git-bisect-to-find-the-first-bad-commit/</guid>
        
        
        <category>Git</category>
        
      </item>
    
      <item>
        <title>What Steve Jobs Thinks of React Native</title>
        <description>&lt;p&gt;Adobe announced they are &lt;a href=&quot;https://www.theverge.com/2017/7/25/16026236/adobe-flash-end-of-support-2020&quot;&gt;killing Flash&lt;/a&gt; in 2020.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.apple.com/hotnews/thoughts-on-flash/&quot;&gt;7 years ago&lt;/a&gt;, Steve Jobs explained why Apple and iPhone doesn’t support Flash.&lt;/p&gt;

&lt;p&gt;He was right.&lt;/p&gt;

&lt;h2 id=&quot;the-most-important-reason&quot;&gt;The most important reason&lt;/h2&gt;

&lt;p&gt;The sixth reason, the most important, he said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We know from painful experience that letting a third party layer of software come between the platform and the developer ultimately results in sub-standard apps and hinders the enhancement and progress of the platform.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;If developers grow dependent on third party development libraries and tools, they can only take advantage of platform enhancements if and when the third party chooses to adopt the new features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;We cannot be at the mercy of a third party deciding if and when they will make our enhancements available to our developers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;This becomes even worse if the third party is supplying a cross platform development tool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Flash was a cross platform development tool.&lt;/p&gt;

&lt;p&gt;React Native is a cross platform development tool, too.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;http://samwize.com/2017/01/24/why-i-hate-react-native/&quot;&gt;hate React Native&lt;/a&gt;, and I briefly mentioned the &lt;a href=&quot;http://samwize.com/2017/01/09/react-native-for-ios-swift-developer/&quot;&gt;disadvantage of using another big dependency&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These past events have once again reminded us to “bet” on good technologies, and who to trust.&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Jul 2017 13:32:02 +0800</pubDate>
        <link>http://samwize.com/2017/07/26/what-steve-jobs-thinks-of-react-native/</link>
        <guid isPermaLink="true">http://samwize.com/2017/07/26/what-steve-jobs-thinks-of-react-native/</guid>
        
        
        <category>React Native</category>
        
      </item>
    
      <item>
        <title>Backing Up Photos Library and Handling Corrupted Files Error -36</title>
        <description>&lt;p&gt;I was backing up my Photos Library, a huge 500 GB &lt;code class=&quot;highlighter-rouge&quot;&gt;Photos Library.photoslibrary&lt;/code&gt;, and copying the file to my external drive, it had this error:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Finder can’t complete the operation because some data in Photos Library.photoslibrary” can’t be read or written. (Error code -36)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As ambiguous as it can be, error code 36 turns out to be I/O problem, or corrupted files.&lt;/p&gt;

&lt;p&gt;For my case, it is most likely a corrupted photo/video. I have no idea how they became corrupted in Photos. Either Photos app is buggy and corrupted it, or my harddrive is faulty..&lt;/p&gt;

&lt;p&gt;In any case, I have to recover them.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.macworld.com/article/3189985/photography/how-to-fix-an-uncopyable-iphoto-or-photos-library.html&quot;&gt;MacWorld has a tip&lt;/a&gt; on creating a new “photoslibrary”, revealing the package, and manually copying the original files to the new directory. Doing so will reveal the exact files that are throwing the error.&lt;/p&gt;

&lt;p&gt;But if you have lots of photos/videos and there are lots of corrupted files, then you will save lots of time if you know how to use the command line.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ditto -v ~/Pictures/Photos&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Library.photoslibrary/ /Volumes/MyDrive/Photos&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Library.photoslibrary/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;ditto&lt;/code&gt; command will copy without stopping on failure. Instead, it will log the files with problem.&lt;/p&gt;

&lt;h2 id=&quot;copying-corrupted-files&quot;&gt;Copying Corrupted Files&lt;/h2&gt;

&lt;p&gt;The above will skip the corrupted files. Not a big deal if you can afford losing some of the photos.&lt;/p&gt;

&lt;p&gt;But some of these corrupted files are just partially corrupted eg. a video can be played ok in the first 50%&lt;/p&gt;

&lt;p&gt;There is still a way to copy the corrupted files.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/dd.1.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dd&lt;/code&gt;&lt;/a&gt; let you copy bit by bit, even if an input error occurs:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;myfile.MOV &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/Volumes/MyDrive/myfile.MOV &lt;span class=&quot;nv&quot;&gt;conv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;noerror,sync
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above will copy “myfile.MOV” even if it is corrupted.&lt;/p&gt;

&lt;h2 id=&quot;check-your-disk-health-status&quot;&gt;Check your disk health status&lt;/h2&gt;

&lt;p&gt;Using &lt;a href=&quot;https://support.apple.com/kb/PH22243?locale=en_SG&quot;&gt;Disk Utility&lt;/a&gt;, run “First Aid” to repair. Sometimes you may need to boot into &lt;a href=&quot;/2017/04/06/guide-to-boot-up-macos-in-other-modes-and-troubleshooting/&quot;&gt;Recovery mode&lt;/a&gt; to run.&lt;/p&gt;

&lt;p&gt;Or run &lt;code class=&quot;highlighter-rouge&quot;&gt;/sbin/fsck -fy&lt;/code&gt; (might need to be in &lt;a href=&quot;/2017/04/06/guide-to-boot-up-macos-in-other-modes-and-troubleshooting/&quot;&gt;Single User mode&lt;/a&gt;), which does the same as First Aid.&lt;/p&gt;

&lt;h2 id=&quot;backing-up-frequently-is-important&quot;&gt;Backing up frequently is important&lt;/h2&gt;

&lt;p&gt;It is my fault for losing my dear photos, though I also blame my 5 year old iMac (2012 model) which seems to be failing. It is either the OS fault or the drive is having bad sectors.&lt;/p&gt;

&lt;p&gt;But it is user’s fault for not having a backup plan. I backup but only occassionally, and manually by copying to another external drive.&lt;/p&gt;

&lt;p&gt;I didn’t use Time Machine, because I didn’t have a hard disk that is big enough for my near 1 TB of data on iMac.&lt;/p&gt;

&lt;p&gt;I have since bought a &lt;a href=&quot;http://amzn.to/2tblyR0&quot;&gt;3 TB external drive&lt;/a&gt; at $102 USD. This should serve well as a Time Machine backup drive for the next few years.&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Jun 2017 00:03:39 +0800</pubDate>
        <link>http://samwize.com/2017/06/26/backing-up-photo-library-and-handling-corrupted-files-error-36/</link>
        <guid isPermaLink="true">http://samwize.com/2017/06/26/backing-up-photo-library-and-handling-corrupted-files-error-36/</guid>
        
        
      </item>
    
      <item>
        <title>Tip: Debugging UI Calls in Background Threads</title>
        <description>&lt;p&gt;We all know UI calls have to be run in the main thread.&lt;/p&gt;

&lt;p&gt;But sometimes mistake happen, and you will see this in debug log:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This application is modifying the autolayout engine from a background thread after the engine was accessed from the main thread. This can lead to engine corruption and weird crashes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is a easy way to trace which part of your code is casuing the problem.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add Symbolic Breakpoint&lt;/li&gt;
  &lt;li&gt;Symbol: &lt;code class=&quot;highlighter-rouge&quot;&gt;[UIView layoutIfNeeded]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Condition: &lt;code class=&quot;highlighter-rouge&quot;&gt;!(BOOL)[NSThread isMainThread]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are other “symbols” to catch. Create a symbolic breakpoint for &lt;strong&gt;each of these symbols&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[UIView updateConstraintsIfNeeded]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[UIView setNeedsUpdateConstraints]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[UIView setNeedsDisplay]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[UIView setNeedsLayout]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Run the app, and Xcode will break at the offending code.&lt;/p&gt;

&lt;p&gt;Lastly, the fix as we all know:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;DispatchQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// The UI call&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 06 Jun 2017 09:52:50 +0800</pubDate>
        <link>http://samwize.com/2017/06/06/debugging-ui-calls-in-background-threads/</link>
        <guid isPermaLink="true">http://samwize.com/2017/06/06/debugging-ui-calls-in-background-threads/</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Xcode 8 File Templates</title>
        <description>&lt;h2 id=&quot;the-secret-feature-of-xcode&quot;&gt;The secret feature of Xcode&lt;/h2&gt;

&lt;p&gt;Ok, not exactly a secret, but it is definitely one of the less known features of Xcode, that was &lt;a href=&quot;https://developer.apple.com/search/?q=xcode%20template&quot;&gt;never documented&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Whenever you add a new file, you are using one of the provided &lt;strong&gt;File Templates&lt;/strong&gt;. Eg. When you choose a “Cocoa Touch Class” and subsequently selected a UIViewController subclass, it is simply generating the new file with a template.&lt;/p&gt;

&lt;p&gt;Knowing how to make full use of it will speed up your development, similar to the &lt;a href=&quot;/2014/03/26/tip-use-xcode-snippets/&quot;&gt;tip on Xcode’s code snippets&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are using a certain architecture that needs to create many files for a module, file template can help to create and generate boilerplate codes quickly.&lt;/p&gt;

&lt;h2 id=&quot;creating-your-file-template&quot;&gt;Creating Your File Template&lt;/h2&gt;

&lt;p&gt;You have to store Xcode file templates in&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/Library/Developer/Xcode/Templates/File Templates/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is stored under your user account. In the later section, we will share a tip using Dropbox to sync all your templates.&lt;/p&gt;

&lt;p&gt;For now, let’s create your template under that directory. The &lt;code class=&quot;highlighter-rouge&quot;&gt;/Templates/File Templates/&lt;/code&gt; folders have to be created along with your template eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;MyTemplate.xctemplate&lt;/code&gt; (a directory with the extension .xctemplate)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p ~/Library/Developer/Xcode/Templates/File\ Templates/MyTemplate.xctemplate/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There is another kind of template known as &lt;strong&gt;Project Templates&lt;/strong&gt;. We will not be discussing it, but you should have guessed where it should be – &lt;code class=&quot;highlighter-rouge&quot;&gt;~/Library/Developer/Xcode/Templates/Project Templates/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, let’s refer to the provided standard Xcode file templates, which are all in&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Applications/Xcode.app/Contents/Developer/Library/Xcode/Templates/File Templates/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We will copy the simple swift template, and modify for our use later.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp -R \
/Applications/Xcode.app/Contents/Developer/Library/Xcode/Templates/File\ Templates/Source/Swift\ File.xctemplate/ \
~/Library/Developer/Xcode/Templates/File\ Templates/MyTemplate.xctemplate/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You will see a few files in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/Library/Developer/Xcode/Templates/File\ Templates/MyTemplate.xctemplate/&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;how-to-use-your-template&quot;&gt;How to use your template&lt;/h2&gt;

&lt;p&gt;At this point, your custom template can already be used.&lt;/p&gt;

&lt;p&gt;In Xcode, add a new file, and search for “MyTemplate” (or scroll to File Templates at the bottom), and it will generate an empty Swift file.&lt;/p&gt;

&lt;p&gt;You can also see your template under File Template Library. Or press &lt;code class=&quot;highlighter-rouge&quot;&gt;CMD + ALT + CTRL + 1&lt;/code&gt;. You might need to restart Xcode for it to find the newly created template. You can drag a template to your project navigation.&lt;/p&gt;

&lt;h2 id=&quot;customize-the-template&quot;&gt;Customize the template&lt;/h2&gt;

&lt;p&gt;Good, now let’s learn how to customize the template.&lt;/p&gt;

&lt;p&gt;There are a few files in a template.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TemplateIcon.png&lt;/code&gt; (and the @2x) is obvious – a visual icon to represent your template in Xcode&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TemplateInfo.plist&lt;/code&gt; – like project Info.plist, this property file describes the template&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The rest of the files (eg &lt;code class=&quot;highlighter-rouge&quot;&gt;___FILEBASENAME___.swift&lt;/code&gt;) are the actual files that will be created. If you add more files eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;___FILEBASENAME___+Extension.swift&lt;/code&gt;, then that file will be created too.&lt;/p&gt;

&lt;p&gt;Let’s dive deeper into &lt;code class=&quot;highlighter-rouge&quot;&gt;TemplateInfo.plist&lt;/code&gt;, which provides many options.&lt;/p&gt;

&lt;p&gt;There are a few &lt;code class=&quot;highlighter-rouge&quot;&gt;Kind&lt;/code&gt; of templates. We usually use &lt;code class=&quot;highlighter-rouge&quot;&gt;Xcode.IDEFoundation.TextSubstitutionFileTemplateKind&lt;/code&gt;. Others are &lt;code class=&quot;highlighter-rouge&quot;&gt;Xcode.IDEKit.PlaygroundWithPlatformChoice&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Summary&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Description&lt;/code&gt; are obvious.&lt;/p&gt;

&lt;h3 id=&quot;options&quot;&gt;Options&lt;/h3&gt;

&lt;p&gt;You can provide many &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt;s, an array of dictionary.&lt;/p&gt;

&lt;p&gt;Let’s look at this example, with 1 item in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/xcode-template-options.png&quot; alt=&quot;Example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Identifier&lt;/code&gt; is very important. It is the variable name that can be used in the file template.&lt;/p&gt;

&lt;p&gt;Eg In &lt;code class=&quot;highlighter-rouge&quot;&gt;___FILEBASENAME___.swift&lt;/code&gt;, you can have this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let ___VARIABLE_FOO___: String
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When you create the file, you will be prompted to enter for “Foo:”, with a default text “ohMyFoo”. The actual generated then becomes&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let ohMyFoo: String
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You could have other &lt;code class=&quot;highlighter-rouge&quot;&gt;Type&lt;/code&gt;, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;popup&lt;/code&gt; with it’s &lt;code class=&quot;highlighter-rouge&quot;&gt;Values&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;As you can imagine, you can have multiple variables to be used in the file template.&lt;/p&gt;

&lt;h2 id=&quot;sync-to-dropbox&quot;&gt;Sync to Dropbox&lt;/h2&gt;

&lt;p&gt;If you are using multiple machine, you will like this tip.&lt;/p&gt;

&lt;p&gt;We can store our templates in Dropbox, and using symlink to the Xcode folders. This is similar to the tip for &lt;a href=&quot;/2014/03/26/tip-use-xcode-snippets/&quot;&gt;syncing code snippets&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://db.tt/GRqFn03&quot;&gt;Signup for Dropbox&lt;/a&gt; if you don’t have an account.&lt;/p&gt;

&lt;p&gt;I store them under &lt;code class=&quot;highlighter-rouge&quot;&gt;~/Dropbox/Workspace/Xcode/Templates&lt;/code&gt;. It’s up to you where to store. Move your custom templates to the folder.&lt;/p&gt;

&lt;p&gt;For our example, it will be in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/Dropbox/Workspace/Xcode/Templates/File Templates/MyTemplate.xctemplate/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then create the symbolic link:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln -s ~/Dropbox/Workspace/Xcode/Templates ~/Library/Developer/Xcode/Templates/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s it! Remember to create the symbolic link for every machine.&lt;/p&gt;
</description>
        <pubDate>Fri, 12 May 2017 14:40:33 +0800</pubDate>
        <link>http://samwize.com/2017/05/12/xcode-8-file-templates/</link>
        <guid isPermaLink="true">http://samwize.com/2017/05/12/xcode-8-file-templates/</guid>
        
        
        <category>Xcode</category>
        
      </item>
    
      <item>
        <title>Guide to watchOS Development</title>
        <description>&lt;p&gt;&lt;em&gt;A guide for watchOS 3, because the &lt;a href=&quot;https://developer.apple.com/library/content/documentation/General/Conceptual/WatchKitProgrammingGuide/&quot;&gt;watch app programming guide&lt;/a&gt; is not obvious.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;companion-app&quot;&gt;Companion App&lt;/h2&gt;

&lt;p&gt;The companion app is the iOS app, aka the parent or host app.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You CANNOT open companion app programmatically&lt;/li&gt;
  &lt;li&gt;You can communicate with the companion app, and at best put the app in background state&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setup-bi-directional-session&quot;&gt;Setup bi-directional session&lt;/h2&gt;

&lt;p&gt;First, setup sessions between watch app and companion app using &lt;a href=&quot;https://developer.apple.com/reference/watchconnectivity/wcsession&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WCSession&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You need to setup for both directions.&lt;/p&gt;

&lt;p&gt;On iOS’s app delegate, or watchOS’ extension delegate, setup the session like this:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setupWatchSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WCSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isSupported&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WCSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;a href=&quot;https://developer.apple.com/reference/watchconnectivity/wcsessiondelegate&quot;&gt;delegate&lt;/a&gt; manages state change, and also receiving of messages:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AppDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WCSessionDelegate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WCSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activationDidCompleteWith&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;activationState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WCSessionActivationState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sessionDidBecomeInactive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WCSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;      
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sessionDidDeactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WCSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WCSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;didReceiveMessage&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;replyHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The first 3 delegate methods are mandatory, even if empty.&lt;/p&gt;

&lt;p&gt;The 4th method &lt;code class=&quot;highlighter-rouge&quot;&gt;session:didReceiveMessage:&lt;/code&gt; is for receiving messages from the other side. It is optional method, but we use it in next section.&lt;/p&gt;

&lt;h2 id=&quot;ways-to-communicate&quot;&gt;Ways to Communicate&lt;/h2&gt;

&lt;p&gt;There are a number of ways, and you &lt;a href=&quot;https://developer.apple.com/library/content/documentation/General/Conceptual/WatchKitProgrammingGuide/SharingData.html#//apple_ref/doc/uid/TP40014969-CH29-SW1&quot;&gt;choose what is right&lt;/a&gt; for your app.&lt;/p&gt;

&lt;p&gt;I will mention what is easiest – &lt;a href=&quot;https://developer.apple.com/reference/watchconnectivity/wcsession/1615687-sendmessage&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sendMessage&lt;/code&gt;&lt;/a&gt;. Let’s look at the signature:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func sendMessage(_ message: [String : Any], replyHandler: (([String : Any]) -&amp;gt; Void)?, errorHandler: ((Error) -&amp;gt; Void)? = nil)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;You send a message payload in the form of a dictionary with &lt;code class=&quot;highlighter-rouge&quot;&gt;sendMessage&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The other side recieve via &lt;a href=&quot;https://developer.apple.com/reference/watchconnectivity/wcsessiondelegate/1615677-session&quot;&gt;didReceiveMessage&lt;/a&gt; (one of &lt;code class=&quot;highlighter-rouge&quot;&gt;WKSessionDelegate&lt;/code&gt; method)&lt;/li&gt;
  &lt;li&gt;The other side can reply via the &lt;code class=&quot;highlighter-rouge&quot;&gt;replyHandler&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;You get back the reply in your reply handler&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is a simple send and reply mechanism, triggered by one side.&lt;/p&gt;

&lt;h2 id=&quot;open-companion-app-in-active-state&quot;&gt;Open Companion App in Active State&lt;/h2&gt;

&lt;p&gt;This is a very common scenario – watch app wants to open companion (iOS) app.&lt;/p&gt;

&lt;p&gt;That is NOT possible.&lt;/p&gt;

&lt;p&gt;The best we developers can manage is this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Watch app communicates via &lt;code class=&quot;highlighter-rouge&quot;&gt;sendMessage&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;iOS app receives message&lt;/li&gt;
  &lt;li&gt;iOS app reply it’s current state – active or not – using &lt;code class=&quot;highlighter-rouge&quot;&gt;UIApplication.shared.applicationState&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Watch app receives reply, and if state is not active, inform the user that he must open the iOS app&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The above can be slightly improved. When iOS app is opened, &lt;strong&gt;proactively&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;sendMessage&lt;/code&gt; to watch app on it’s status.&lt;/p&gt;

&lt;h2 id=&quot;debug-both-watch-and-ios-targets&quot;&gt;Debug BOTH watch and iOS targets&lt;/h2&gt;

&lt;p&gt;It seems like Xcode cannot run and debug watchOS and iOS targets at the same time.&lt;/p&gt;

&lt;p&gt;But it is actually possible, but &lt;a href=&quot;https://forums.developer.apple.com/thread/16003&quot;&gt;not obvious&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run watch app&lt;/li&gt;
  &lt;li&gt;Xcode &amp;gt; Debug &amp;gt; Attach to process &amp;gt; select your iOS app&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want to debug your iOS app before it is being launched, you can “Attach to Process by PID or Name…”&lt;/p&gt;

&lt;h2 id=&quot;pitfall-xcode-build-errors&quot;&gt;Pitfall: Xcode Build Errors&lt;/h2&gt;

&lt;p&gt;I encountered Xcode bug where the watch app build settings does not include the correct build architecture.&lt;/p&gt;

&lt;p&gt;Not sure why, but Xcode &lt;em&gt;always&lt;/em&gt; screw up with the build architecture.&lt;/p&gt;

&lt;p&gt;Plus, Xcode throws confusing errors such as &lt;code class=&quot;highlighter-rouge&quot;&gt;WatchKit App doesn&#39;t contain any WatchKit Extensions. Verify that the value of NSExtensionPointIdentifier in your WatchKit Extension&#39;s Info.plist is set to com.apple.watchkit&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Embedded Binary Validation utility Error&lt;/code&gt;, but really, the root cause is that it didn’t build the watch extension.&lt;/p&gt;

&lt;p&gt;Make sure under Watch Extension target &amp;gt; Build Settings &amp;gt; Valid Architectures, it includes &lt;code class=&quot;highlighter-rouge&quot;&gt;armv7k&lt;/code&gt; (for device) and &lt;code class=&quot;highlighter-rouge&quot;&gt;i386&lt;/code&gt; (for simulator).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/content/technotes/tn2424/_index.html&quot;&gt;Technical notes&lt;/a&gt; could be helpful.&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Apr 2017 14:31:36 +0800</pubDate>
        <link>http://samwize.com/2017/04/22/all-you-need-to-know-about-watchos-development/</link>
        <guid isPermaLink="true">http://samwize.com/2017/04/22/all-you-need-to-know-about-watchos-development/</guid>
        
        
        <category>watchOS</category>
        
      </item>
    
      <item>
        <title>Access Levels in Swift</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/swift-access-levels.jpg&quot; alt=&quot;The 5 Access Levels in Swift&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-default&quot;&gt;The Default&lt;/h2&gt;

&lt;p&gt;The default is &lt;code class=&quot;highlighter-rouge&quot;&gt;internal&lt;/code&gt;, which means access is restricted to within a module.&lt;/p&gt;

&lt;p&gt;What is a module? An app is 1 module.&lt;/p&gt;

&lt;p&gt;Hence, the default for an app is everything is accessible within the app.&lt;/p&gt;

&lt;h2 id=&quot;which-to-use&quot;&gt;Which to use?&lt;/h2&gt;

&lt;p&gt;The good practise is to start being extremely restrictive.&lt;/p&gt;

&lt;p&gt;Start with &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt;, and expose more, only if necessary.&lt;/p&gt;

&lt;h2 id=&quot;application-vs-framework-development&quot;&gt;Application vs Framework Development&lt;/h2&gt;

&lt;p&gt;For regular application development, you will use only (1) to (3).&lt;/p&gt;

&lt;p&gt;For developers working on framework/library/SDK, they will use (4) and (5), because their “module” is exposed to other developers. The difference between the last 2 levels is that &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; does not allow the type/func to be subclassed/overriden, while &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; let you do whatever you want.&lt;/p&gt;

&lt;h2 id=&quot;implicit&quot;&gt;Implicit&lt;/h2&gt;

&lt;p&gt;If a type has a certain access level, the properties within will have the same level, implicitly.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// implicitly private&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;specify-explicitly-for-top-level-definitions&quot;&gt;Specify explicitly for top-level definitions&lt;/h2&gt;

&lt;p&gt;A &lt;a href=&quot;https://github.com/github/swift-style-guide&quot;&gt;good practise&lt;/a&gt; is to specify the access level explicitly for the top-level types and functions.&lt;/p&gt;

&lt;p&gt;Don’t leave it to the default (&lt;code class=&quot;highlighter-rouge&quot;&gt;internal&lt;/code&gt;). Think hard if you need other part of your app to access it.&lt;/p&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@testable import MyApp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In your unit tests, you can import with &lt;code class=&quot;highlighter-rouge&quot;&gt;@testable&lt;/code&gt; attribute, which is a superpower to &lt;a href=&quot;https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/testing_with_xcode/chapters/04-writing_tests.html&quot;&gt;change access levels&lt;/a&gt; in the module/app, so that in your tests you can access them.&lt;/p&gt;

&lt;p&gt;For example, an &lt;code class=&quot;highlighter-rouge&quot;&gt;internal&lt;/code&gt; class is not accessible to test target, because a test target is an external module. With &lt;code class=&quot;highlighter-rouge&quot;&gt;@testable&lt;/code&gt;, the access level is increased to &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt;, and you can now access it (and may even subclass it)!&lt;/p&gt;

&lt;h2 id=&quot;final&quot;&gt;Final&lt;/h2&gt;

&lt;p&gt;Finally, another good practise is to lock down your definitions with &lt;code class=&quot;highlighter-rouge&quot;&gt;final&lt;/code&gt; (:&lt;/p&gt;

&lt;p&gt;This attribute provides an additional restriction – prevent others from subclassing and overriding it.&lt;/p&gt;

&lt;h2 id=&quot;wait-lastly-its-hell-of-a-mess-from-swift&quot;&gt;Wait. Lastly, it’s hell of a mess from Swift.&lt;/h2&gt;

&lt;p&gt;This is a complain on how access levels have evolved, yet is still not great in Swift 3.&lt;/p&gt;

&lt;p&gt;In Swift 1, there are 2 levels.&lt;br /&gt;
In Swift 2, there are 3 levels.&lt;br /&gt;
In Swift 3, there are 5 levels.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I believe it is a mistake in Swift 3 to adopt &lt;a href=&quot;https://github.com/apple/swift-evolution/blob/master/proposals/0025-scoped-access-level.md&quot;&gt;SE-0025&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My biggest gripe is this: I have extension X to a type T, keeping them in seperate files. If I want X to use a private member in T, it is impossible to do so with &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;fileprivate&lt;/code&gt;. I am forced to increase the access to &lt;code class=&quot;highlighter-rouge&quot;&gt;internal&lt;/code&gt;, which is not what I want.&lt;/p&gt;

&lt;p&gt;There is no way to have type level private. The current &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt; is local scope private, and &lt;code class=&quot;highlighter-rouge&quot;&gt;fileprivate&lt;/code&gt; is a &lt;a href=&quot;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20170403/034903.html&quot;&gt;weird brother&lt;/a&gt; that extends to within that file.&lt;/p&gt;

&lt;p&gt;After Swift 3 was introduced, there is proposal &lt;a href=&quot;https://github.com/apple/swift-evolution/blob/master/proposals/0159-fix-private-access-levels.md&quot;&gt;SE-0159&lt;/a&gt; to fix the mistake, but was &lt;a href=&quot;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20170403/034902.html&quot;&gt;rejected&lt;/a&gt;. Clearly the core team acknowledged the shortcoming, but instead of changing the keywords again, they will likely introduce a “Type-based” &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt; access in Swift 4.&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Apr 2017 11:31:44 +0800</pubDate>
        <link>http://samwize.com/2017/04/20/access-levels-in-swift/</link>
        <guid isPermaLink="true">http://samwize.com/2017/04/20/access-levels-in-swift/</guid>
        
        
      </item>
    
      <item>
        <title>Guide to Booting Up macOS in Other Modes, and Troubleshooting</title>
        <description>&lt;p&gt;This guide is for troubleshooting macOS in the scenario that it can’t boot up.&lt;/p&gt;

&lt;p&gt;I have personally encountered a couple of times, frightening scenarios, where my mac somehow could not boot up, or get stuck during login etc. macOS provides many “secret” modes to help to troubleshoot.&lt;/p&gt;

&lt;p&gt;Knowing them will be handy in time of crisis.&lt;/p&gt;

&lt;p&gt;You will need to hold down certain keys when your machine is powered on to enter these modes. When you hear the startup sound and see the Apple logo, you may release the keys.&lt;/p&gt;

&lt;h2 id=&quot;resetting-pramnvram&quot;&gt;Resetting PRAM/NVRAM&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Hold Command + Option + P + R&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Parameter RAM stores default values, and it could get corrupted for some reasons.&lt;/p&gt;

&lt;p&gt;This is &lt;strong&gt;The Number 1&lt;/strong&gt; troubleshooting resolution. Always try this first.&lt;/p&gt;

&lt;h2 id=&quot;resetting-scm&quot;&gt;Resetting SCM&lt;/h2&gt;

&lt;p&gt;Similar to resetting PRAM, but SCM involves cutting off power, hence it is different for MacBook and iMac. Read &lt;a href=&quot;https://support.apple.com/en-sg/HT201295&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;verbose-mode&quot;&gt;Verbose Mode&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Hold Command + V&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If resetting fails, use verbose mode to identify what is causing the problem.&lt;/p&gt;

&lt;h2 id=&quot;safe-mode&quot;&gt;Safe Mode&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Hold Shift&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This will boot without loading third-party drivers and startup programs.&lt;/p&gt;

&lt;h2 id=&quot;single-user-mode&quot;&gt;Single User Mode&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Hold Command + S&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In single user mode, you have access to terminal, so you can run certain tools to troubleshoot.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Check and repair file system for consistency&lt;/span&gt;
/sbin/fsck -fy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;apple-hardware-test&quot;&gt;Apple Hardware Test&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Hold D&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can perform a short test (around 3 min), or an extended test (around 1 hour).&lt;/p&gt;

&lt;p&gt;Special case: If you encountered &lt;code class=&quot;highlighter-rouge&quot;&gt;4HDD/11/40000000: SATA(0,0)&lt;/code&gt;, it could be a &lt;a href=&quot;https://support.apple.com/en-sg/HT203648&quot;&gt;false positive&lt;/a&gt;. You can disable looping by pressing &lt;em&gt;L&lt;/em&gt; before starting the test. I encountered this, but I still managed to “fix” it - the SSD is not damaged in my case. So don’t worry too much on this error.&lt;/p&gt;

&lt;h2 id=&quot;recovery-mode&quot;&gt;Recovery Mode&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Hold Command + R&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If all else failed, you can try reinstalling macOS.&lt;/p&gt;

&lt;h2 id=&quot;startup-option&quot;&gt;Startup Option&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Hold Option&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can startup from other device such as external drive. It is possible to load the entire OS in an external drive, and boot from there.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;common-bootup-errors--fixes&quot;&gt;Common Bootup Errors &amp;amp; Fixes&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Mac OS version not yet set&lt;/code&gt; - Try boot with startup option (&lt;em&gt;Hold Option&lt;/em&gt;) and select the disk with the OS&lt;/p&gt;

&lt;p&gt;If you have tried all ways and your Mac OS still refuses to boot, you can create a &lt;a href=&quot;https://support.apple.com/en-sg/HT201372&quot;&gt;bootable macOS on USB&lt;/a&gt;. Then &lt;em&gt;hold option&lt;/em&gt; while bootup to select the OS on USB.&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Apr 2017 23:02:29 +0800</pubDate>
        <link>http://samwize.com/2017/04/06/guide-to-boot-up-macos-in-other-modes-and-troubleshooting/</link>
        <guid isPermaLink="true">http://samwize.com/2017/04/06/guide-to-boot-up-macos-in-other-modes-and-troubleshooting/</guid>
        
        
        <category>mac</category>
        
      </item>
    
  </channel>
</rss>
