<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>@samwize</title>
    <description>¯\_(ツ)_/¯
</description>
    <link>https://samwize.com/</link>
    <atom:link href="https://samwize.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 03 Jul 2019 20:36:42 +0800</pubDate>
    <lastBuildDate>Wed, 03 Jul 2019 20:36:42 +0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Catalina Beta Bug: Deleting Files Did Not Free Up Disk Space!</title>
        <description>&lt;p&gt;I was on macOS 10.15 Catalina BETA 1, and I encountered a very troubling bug.&lt;/p&gt;

&lt;p&gt;I know the risk of beta.. this post is to help others who are in the same situation.&lt;/p&gt;

&lt;h2 id=&quot;the-problem-disk-space-never-free-up&quot;&gt;The Problem: Disk Space Never Free Up&lt;/h2&gt;

&lt;p&gt;It turns out there is &lt;a href=&quot;https://forums.developer.apple.com/thread/117223&quot;&gt;a bug&lt;/a&gt; with Catalina together with Time Machine.&lt;/p&gt;

&lt;p&gt;Deletion (and emptying thrash) will not return you the disk space.&lt;/p&gt;

&lt;p&gt;I was very anxious because I was going to update to a new beta 3, and I thought the new beta should fix the problem. But, I don’t have enough disk space to install the new beta! It is a chicken and egg story?&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;

&lt;p&gt;Turns out, it is possible to free up the disk space despite the bug on Beta 1.&lt;/p&gt;

&lt;p&gt;You have to &lt;strong&gt;delete Time Machine local snapshot&lt;/strong&gt;. I will explain what they are in later section.&lt;/p&gt;

&lt;p&gt;Go to command line and list them.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tmutil listlocalsnapshots /Volumes/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My output looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;com.apple.TimeMachine.2019-07-02-204331
com.apple.TimeMachine.2019-07-03-085015
com.apple.TimeMachine.2019-07-03-103553
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Go on and delete a snapshot with the date.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tmutil deletelocalsnapshots 2019-07-02-204331
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will free up a lot of disk space! Do it for all if needed!&lt;/p&gt;

&lt;h2 id=&quot;what-is-local-snapshot&quot;&gt;What is Local Snapshot?&lt;/h2&gt;

&lt;p&gt;There is one thing I learnt from this episode.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://support.apple.com/en-us/HT204015&quot;&gt;Local snapshots&lt;/a&gt; are created on your Mac (NOT on your backup disk), when the backup disk is unavailable.&lt;/p&gt;

&lt;p&gt;In some sense, you could even recover from these local snapshots when your backup disk is not around.&lt;/p&gt;

&lt;p&gt;However, they are kept at most 24 hours.&lt;/p&gt;

&lt;p&gt;This is a good trick when you need to free up some critical disk space.&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Jul 2019 20:19:00 +0800</pubDate>
        <link>https://samwize.com/2019/07/03/catalina-beta-bug-deleting-files-did-not-free-up-disk-space/</link>
        <guid isPermaLink="true">https://samwize.com/2019/07/03/catalina-beta-bug-deleting-files-did-not-free-up-disk-space/</guid>
        
        
        <category>macOS</category>
        
        <category>bug</category>
        
      </item>
    
      <item>
        <title>How to Generate PDF With Images</title>
        <description>&lt;p&gt;To create PDF, one of the most popular way is to create the HTML, then convert it to a PDF.&lt;/p&gt;

&lt;p&gt;This is in essence using &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UIMarkupTextPrintFormatter&lt;/code&gt;&lt;/a&gt;, one of the &lt;a href=&quot;https://developer.apple.com/documentation/uikit/printing&quot;&gt;provided formatters&lt;/a&gt; to generate PDF.&lt;/p&gt;

&lt;h2 id=&quot;pitfall-it-does-not-work-for-images&quot;&gt;Pitfall: It does NOT work for images&lt;/h2&gt;

&lt;p&gt;Unfortunately, &lt;code class=&quot;highlighter-rouge&quot;&gt;UIMarkupTextPrintFormatter&lt;/code&gt; can interpret all of HTML markups, but not the images.&lt;/p&gt;

&lt;p&gt;Numerous &lt;a href=&quot;https://stackoverflow.com/q/7058556/242682&quot;&gt;approaches&lt;/a&gt; yield no results, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;img&lt;/code&gt; tag with local file path&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;img&lt;/code&gt; with base64 encoding&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is in no fault to do with the HTML, since that can be displayed correctly in web views.&lt;/p&gt;

&lt;h2 id=&quot;solution-use-webkit&quot;&gt;Solution: Use WebKit&lt;/h2&gt;

&lt;p&gt;It turns out a possible solution is to use &lt;code class=&quot;highlighter-rouge&quot;&gt;WKWebView&lt;/code&gt; to load the html, then access it’s &lt;code class=&quot;highlighter-rouge&quot;&gt;viewPrintFormatter&lt;/code&gt; (&lt;a href=&quot;https://developer.apple.com/documentation/uikit/uiview/1621835-viewprintformatter&quot;&gt;a &lt;code class=&quot;highlighter-rouge&quot;&gt;UIView&lt;/code&gt; property&lt;/a&gt;), then generate the PDF.&lt;/p&gt;

&lt;p&gt;An extra step needs to be taken to wait for the web view to finish loading the HTML.&lt;/p&gt;

&lt;h3 id=&quot;step-1-load-the-web-view&quot;&gt;Step 1: Load the web view&lt;/h3&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;typealias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportManagerCompletion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;NSData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportManagerCompletion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;exportPDF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportCompletion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;webView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;navigationDelegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadHTMLString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;baseURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We created an &lt;code class=&quot;highlighter-rouge&quot;&gt;ExportManager&lt;/code&gt; here to make things clearer, largely it needs to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;hold an instance of the web view, though not displaying it&lt;/li&gt;
  &lt;li&gt;provide a completion handler (&lt;code class=&quot;highlighter-rouge&quot;&gt;ExportManagerCompletion&lt;/code&gt;) to return the PDF data&lt;/li&gt;
  &lt;li&gt;be a delegate to the web view&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-2-handle-when-finish-loading&quot;&gt;Step 2. Handle when finish loading&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKNavigationDelegate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;didFinish&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;navigation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKNavigation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;viewPrintFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;nf&quot;&gt;createPDF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Our class extend &lt;code class=&quot;highlighter-rouge&quot;&gt;WKNavigationDelegate&lt;/code&gt; to handle when the HTML has finished loading.&lt;/p&gt;

&lt;p&gt;We access the web view’s &lt;code class=&quot;highlighter-rouge&quot;&gt;viewPrintFormatter&lt;/code&gt;, which works correctly with images!&lt;/p&gt;

&lt;h2 id=&quot;step-3-render-the-pdf&quot;&gt;Step 3. Render the PDF&lt;/h2&gt;

&lt;p&gt;Finally, we can render the PDF with a working formatter.&lt;/p&gt;

&lt;p&gt;The manager class will use &lt;code class=&quot;highlighter-rouge&quot;&gt;UIPrintPageRenderer&lt;/code&gt; to render the PDF and then call the completion handler successfully.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createPDF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewPrintFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIPrintPageRenderer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addPrintFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;startingAtPageAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Assign paperRect and printableRect&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// A4, 72 dpi&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;paperRect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;595.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;841.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paperRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;paperRect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;printableRect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paperRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;insetBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;printableRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;printableRect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 4. Create PDF context and draw&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pdfData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSMutableData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;UIGraphicsBeginPDFContextToData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdfData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numberOfPages&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;UIGraphicsBeginPDFPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;drawPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIGraphicsGetPDFContextBounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;UIGraphicsEndPDFContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdfData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;extra-html-and-base64-encode-the-image&quot;&gt;Extra: HTML and Base64 encode the image&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, you can encode an image with base64, and then include it in the HTML. The &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag can be generated like this.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;imageBase64Tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;jpegData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpeg&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;base64EncodedString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpegData&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;base64EncodedString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;data:image/jpeg;base64,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base64EncodedString&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;img src=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 02 Jul 2019 14:22:51 +0800</pubDate>
        <link>https://samwize.com/2019/07/02/how-to-generate-pdf-with-images/</link>
        <guid isPermaLink="true">https://samwize.com/2019/07/02/how-to-generate-pdf-with-images/</guid>
        
        
        <category>Swift</category>
        
      </item>
    
      <item>
        <title>Using URLSession for simple HTTP GET &amp; POST</title>
        <description>&lt;p&gt;Since &lt;code class=&quot;highlighter-rouge&quot;&gt;URLSession&lt;/code&gt; was introduced in iOS 7, &lt;a href=&quot;/2014/05/10/tutorial-on-using-afnetworking-2-dot-0/&quot;&gt;third party libraries&lt;/a&gt; have somehow lesser value.&lt;/p&gt;

&lt;p&gt;This post is a quick guide with snippets to some common use cases when working with HTTP APIs using the first party Foundation framework.&lt;/p&gt;

&lt;h2 id=&quot;http-get&quot;&gt;HTTP GET&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://samwize.com/api/hero&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dataTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just that few lines of code to fetch from a URL.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;dataTask()&lt;/code&gt; method is a HTTP GET request.&lt;/p&gt;

&lt;h2 id=&quot;http-post&quot;&gt;HTTP POST&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://samwize.com/api/hero&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id=1234&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;using&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uploadTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;uploadTask()&lt;/code&gt; method is for a POST request. Or you may change the &lt;code class=&quot;highlighter-rouge&quot;&gt;httpMethod&lt;/code&gt; to UPDATE etc.&lt;/p&gt;

&lt;h2 id=&quot;post-with-query-string&quot;&gt;POST with query string&lt;/h2&gt;

&lt;p&gt;The POST request above is a simple example, with a payload that doesn’t require any percent encoding. But it is more likely that you have longer query items.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;URLQueryItem&lt;/code&gt; (also Foundation framework) provides a basic struct for constructing key-value pairs.&lt;/p&gt;

&lt;p&gt;Together with &lt;code class=&quot;highlighter-rouge&quot;&gt;URLComponents&lt;/code&gt;, you can add as many key-value pairs to a &lt;code class=&quot;highlighter-rouge&quot;&gt;URLComponents&lt;/code&gt;, then access the &lt;code class=&quot;highlighter-rouge&quot;&gt;percentEncodedQuery&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;urlComponents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLComponents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;q1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLQueryItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;with space that needs encoding&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;urlComponents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlComponents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;percentEncodedQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;using&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;codable-model&quot;&gt;Codable Model&lt;/h2&gt;

&lt;p&gt;New in Swift 4, JSON can be decoded to a &lt;code class=&quot;highlighter-rouge&quot;&gt;struct&lt;/code&gt; easily,&lt;/p&gt;

&lt;p&gt;I have a separate guide to &lt;a href=&quot;/2017/09/26/guide-to-using-codable-struct-for-json-the-new-thing-in-swift-4/&quot;&gt;Codable struct&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s say in the POST API, a &lt;code class=&quot;highlighter-rouge&quot;&gt;Hero&lt;/code&gt; object in JSON is returned, we could decode it easily.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uploadTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;decoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSONDecoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;hero&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try!&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Hero&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Similarly, you can encode a model, then POST the JSON string/data as a payload.&lt;/p&gt;

&lt;h2 id=&quot;other-resources&quot;&gt;Other Resources&lt;/h2&gt;

&lt;p&gt;Apple’s official guide on &lt;a href=&quot;https://developer.apple.com/documentation/foundation/url_loading_system&quot;&gt;URL Loading System&lt;/a&gt; and &lt;a href=&quot;https://developer.apple.com/documentation/foundation/url_loading_system/fetching_website_data_into_memory&quot;&gt;how to fetch data&lt;/a&gt; is their guide to the networking framework. You could use &lt;code class=&quot;highlighter-rouge&quot;&gt;URLSessionConfiguration&lt;/code&gt; to configure your own session, and also use &lt;code class=&quot;highlighter-rouge&quot;&gt;URLSessionDelegate&lt;/code&gt; for a delegate pattern to receive the data.&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Jun 2019 18:25:00 +0800</pubDate>
        <link>https://samwize.com/2019/06/21/simple-guide-to-urlsession-http-get-post-requests/</link>
        <guid isPermaLink="true">https://samwize.com/2019/06/21/simple-guide-to-urlsession-http-get-post-requests/</guid>
        
        
        <category>Foundation</category>
        
      </item>
    
      <item>
        <title>How to Enable Sidecar for the Unsupported Macbooks</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.macrumors.com/2019/06/06/macos-catalina-sidecar-limited-to-newer-macs/&quot;&gt;macOS 10.15 Catalina&lt;/a&gt; (still beta) now supports running a secondary display using an iPad!&lt;/p&gt;

&lt;p&gt;I was disappointed to realize that it does not support for my old &lt;strong&gt;MacBook early 2015&lt;/strong&gt;. I was running an iPad Mini (5th generation 2019), but I know the problem should be due to the MacBook which is driving the display.&lt;/p&gt;

&lt;p&gt;But I got it working!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/sidecar-with-macbook-2015.jpg&quot; alt=&quot;My 2015 MacBook + iPad Mini&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;It turned out that Sidecar is being hidden for some older hardware, and with some simple overriding of the defaults, we can make it show.&lt;/p&gt;

&lt;p&gt;Open your iTerm/Terminal and give these commands:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.sidecar.display hasShownPref &lt;span class=&quot;nt&quot;&gt;-bool&lt;/span&gt; YES
defaults write com.apple.sidecar.display allowAllDevices &lt;span class=&quot;nt&quot;&gt;-bool&lt;/span&gt; YES
open /System/Library/PreferencePanes/Sidecar.prefPane
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;error-on-my-first-attempt&quot;&gt;Error on my first attempt&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/sidecar-pref-error.jpg&quot; alt=&quot;Error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On my first attempt, it throws me that error. But perhaps due to a reboot, the Sidecar shows up mysteriously the next day. So don’t panic if it didn’t work at first.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Jun 2019 15:09:30 +0800</pubDate>
        <link>https://samwize.com/2019/06/09/how-to-enable-sidecar-even-for-the-unsupported-macbooks/</link>
        <guid isPermaLink="true">https://samwize.com/2019/06/09/how-to-enable-sidecar-even-for-the-unsupported-macbooks/</guid>
        
        
        <category>Mac</category>
        
      </item>
    
      <item>
        <title>Mac Tips: Using Finder to Rename Multiple Files, Etc</title>
        <description>&lt;p&gt;I often need to rename multiple files eg. screenshots generated from UI Testing, or my personal photos. I often need to resize images eg. for screenshots on my blogs.&lt;/p&gt;

&lt;p&gt;To do that easily, I often use my &lt;a href=&quot;/2017/01/02/handy-bash-commands/&quot;&gt;handy bash commands&lt;/a&gt;. They are great, and I do have lots of control.&lt;/p&gt;

&lt;p&gt;But macOS Mojave has features covering some of my very common workflow, which I didn’t know till now.&lt;/p&gt;

&lt;h2 id=&quot;rename-multiple-files-with-finder&quot;&gt;Rename Multiple Files with Finder&lt;/h2&gt;

&lt;p&gt;Select multiple files &amp;gt; right click to bring up the menu &amp;gt; &lt;strong&gt;Rename XX items&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And the renaming is powerful. There are 3 modes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Replace Text&lt;/li&gt;
  &lt;li&gt;Add Text&lt;/li&gt;
  &lt;li&gt;Format&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/finder-rename-files.jpg&quot; alt=&quot;Finder Rename Panel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The (3) Format is a nice one that prefix/suffix a running index, or date, to a name. That is very helpful especially for my photo management! I just wish the format can accept my own regex 😁&lt;/p&gt;

&lt;h2 id=&quot;resize-image-save-as-jpeg&quot;&gt;Resize Image, Save as JPEG&lt;/h2&gt;

&lt;p&gt;When I write my blogs, it is often that I take screenshots (in PNG), and then I need to resize them to 600x600, and then convert to JPEG format.&lt;/p&gt;

&lt;p&gt;In the past, I use &lt;a href=&quot;/2017/01/02/handy-bash-commands/&quot;&gt;magick command&lt;/a&gt;, but there is a faster way using &lt;strong&gt;Quick Action&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I can highlight multiple files &amp;gt; right click &amp;gt; Services &amp;gt; Jpeg-600 (a custom Quick Action)!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/quick-action-menu.jpg&quot; alt=&quot;Services Menu&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To create the custom Quick Action, you can open Automator.app and create it. The workflow looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/automator-quick-action.jpg&quot; alt=&quot;Quick Action&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Further more, I have a Jpeg-1200 and Jpeg-800, and I create Keyboard shortcuts for them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/keyboard-shortcuts-services.jpg&quot; alt=&quot;Keyboard Shortcuts&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 31 May 2019 09:46:03 +0800</pubDate>
        <link>https://samwize.com/2019/05/31/mac-tips-using-finder-to-rename-multiple-files-etc/</link>
        <guid isPermaLink="true">https://samwize.com/2019/05/31/mac-tips-using-finder-to-rename-multiple-files-etc/</guid>
        
        
        <category>Mac</category>
        
      </item>
    
      <item>
        <title>How to Animate Auto Layout Constraints (2019)</title>
        <description>&lt;p&gt;I have a &lt;a href=&quot;/2014/07/10/autolayout-constraints-animation/&quot;&gt;2014 post in Objective-C&lt;/a&gt;, and quite a bit has changed since then. We now have &lt;strong&gt;Swift 5&lt;/strong&gt;, and &lt;strong&gt;layout anchors&lt;/strong&gt; (a short introduction below).&lt;/p&gt;

&lt;p&gt;A comprehensive tutorial comes from &lt;a href=&quot;https://theswiftdev.com/2018/06/14/mastering-ios-auto-layout-anchors-programmatically-from-swift/&quot;&gt;theswiftdev&lt;/a&gt;, ranging from where to create the constraints, including how to animate them.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;However, I find his code on animating constraints differ slightly from my style.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-i-animate-constraints&quot;&gt;How I animate constraints&lt;/h2&gt;

&lt;p&gt;Similar to how I do it in &lt;a href=&quot;/2014/07/10/autolayout-constraints-animation/&quot;&gt;2014&lt;/a&gt;, I change the constraints &lt;strong&gt;within&lt;/strong&gt; the animation block.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;withDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Make all constraint changes here&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// For example:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;someViewConstraint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;layoutIfNeeded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://gitlab.com/theswiftdev/uikit/snippets/1741461&quot;&gt;theswiftdev’s gist&lt;/a&gt; does it &lt;strong&gt;before&lt;/strong&gt; the animation block. It also works, but that is simply due to the way layout engine process the changes.&lt;/p&gt;

&lt;p&gt;There are times you might even have to call &lt;code class=&quot;highlighter-rouge&quot;&gt;view.layoutIfNeeded()&lt;/code&gt; before the animation, to make sure the animation starts at the right place.&lt;/p&gt;

&lt;p&gt;Changing your final constraints within the animation block will ensure that is the final state.&lt;/p&gt;

&lt;h2 id=&quot;layout-anchor&quot;&gt;Layout Anchor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/uikit/nslayoutanchor&quot;&gt;Layout anchor&lt;/a&gt; was introduced in iOS 9, making the APIs for auto layout much nicer (to code with).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The NSLayoutAnchor class is a factory class for creating NSLayoutConstraint objects using a fluent API. Use these constraints to programatically define your layout using Auto Layout.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A simple example of setting up a &lt;code class=&quot;highlighter-rouge&quot;&gt;subview&lt;/code&gt; to have the same &lt;em&gt;safe&lt;/em&gt; edges as it’s superview:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leftAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeAreaLayoutGuide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leftAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rightAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeAreaLayoutGuide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rightAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeAreaLayoutGuide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottomAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeAreaLayoutGuide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottomAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is much shorter than init-ing each &lt;code class=&quot;highlighter-rouge&quot;&gt;NSLayoutConstraint&lt;/code&gt; with 7 parameters. Oh, and always better than &lt;a href=&quot;/2014/05/13/first-taste-with-visual-language-format/&quot;&gt;Visual Language Format&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NSLayoutConstraint.activate&lt;/code&gt; is the magic method to activate all those constraints.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NSLayoutConstraint.deactivate&lt;/code&gt; is removing the constraints, and will be useful in animation.&lt;/p&gt;
</description>
        <pubDate>Wed, 15 May 2019 15:15:41 +0800</pubDate>
        <link>https://samwize.com/2019/05/15/how-to-animate-auto-layout-constraints-2019/</link>
        <guid isPermaLink="true">https://samwize.com/2019/05/15/how-to-animate-auto-layout-constraints-2019/</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Try the New Brave Browser with Built-in Ad Blocker</title>
        <description>&lt;p&gt;I have been using this &lt;a href=&quot;https://brave.com/sam690&quot;&gt;new web browser&lt;/a&gt; and would love to share it with you.&lt;/p&gt;

&lt;h2 id=&quot;what-is-so-great-about-brave&quot;&gt;What is so great about Brave?&lt;/h2&gt;

&lt;p&gt;The unique features of &lt;a href=&quot;https://brave.com/sam690&quot;&gt;Brave&lt;/a&gt; are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Block ads and trackers&lt;/li&gt;
  &lt;li&gt;Faster than Chrome/Safari&lt;/li&gt;
  &lt;li&gt;Earn cryptocurrency while you surf the Internet&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I have been using it for months and I vouch the web browser is indeed awesome.&lt;/p&gt;

&lt;p&gt;Youtube without ads 🤠&lt;/p&gt;

&lt;p&gt;Reading articles without inserted banners 🤓&lt;/p&gt;

&lt;p&gt;No more irritating pop-up ad windows 🤗&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brave.com/sam690&quot;&gt;&lt;img src=&quot;/images/brave-browser-stats.png&quot; alt=&quot;Saving me 1.3 hours in 2 months&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;hey-but-this-website-has-advertisements-too&quot;&gt;Hey, but this website has advertisements too!&lt;/h2&gt;

&lt;p&gt;Yup, I put Google Ads in all my websites. I am no saint.&lt;/p&gt;

&lt;p&gt;But it is fair that creators get rewarded.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/website-with-ads.jpg&quot; alt=&quot;I know, ads are irritating&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Anyway, samwize.com generates US$15/mth, enough to pay a few coffee, to keep me writing in the night.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, I am okay if you use Brave, and block my ads.&lt;/p&gt;

&lt;p&gt;Because when you visit my website with Brave, I get paid with their BAT cryptocurrency instead!&lt;/p&gt;

&lt;p&gt;This is a new business model.&lt;/p&gt;

&lt;p&gt;No ads for consumers, while creators get rewarded.&lt;/p&gt;

&lt;h2 id=&quot;how-much-did-i-earn-from-brave&quot;&gt;How much did I earn from Brave?&lt;/h2&gt;

&lt;p&gt;Not much right now, since there are not many people using Brave browser. I hope to share some encouraging numbers in the future :)&lt;/p&gt;

&lt;p&gt;Firstly, more people have to use the browser.&lt;/p&gt;

&lt;p&gt;So please download now, with my &lt;a href=&quot;https://brave.com/sam690&quot;&gt;referral link&lt;/a&gt;, and I help me earn $5 (worth of BAT)!&lt;/p&gt;
</description>
        <pubDate>Thu, 09 May 2019 16:42:28 +0800</pubDate>
        <link>https://samwize.com/2019/05/09/try-brave-browser-with-built-in-ad-block/</link>
        <guid isPermaLink="true">https://samwize.com/2019/05/09/try-brave-browser-with-built-in-ad-block/</guid>
        
        
        <category>Apps</category>
        
      </item>
    
      <item>
        <title>How to Renew Cert for Fastlane Match</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/match/&quot;&gt;Fastlane match&lt;/a&gt; is a great tool, except that they are super slow in fixing and improving, coincidentally &lt;a href=&quot;https://krausefx.com/blog/ending-my-fastlane-chapter&quot;&gt;after the founder left&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am pretty sadden that their solution to “fixing” every issue is:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/fastlane-bot-fix.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem-expired-certificates&quot;&gt;Problem: Expired Certificates&lt;/h2&gt;

&lt;p&gt;A certificate last for 1 year.&lt;/p&gt;

&lt;p&gt;When it expires, fastlane match does not auto-renew, and simply throw an error.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[!] Your certificate ‘54V6LXXXXX.cer’ is not valid, please check end date and renew it if necessary&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This issue was &lt;a href=&quot;https://github.com/fastlane/fastlane/issues/11663&quot;&gt;raised&lt;/a&gt; more than a year ago, and then closed by the bot, without a fix.&lt;/p&gt;

&lt;p&gt;Dang.&lt;/p&gt;

&lt;h2 id=&quot;solution-1-nuke&quot;&gt;Solution 1: nuke&lt;/h2&gt;

&lt;p&gt;You can use their &lt;code class=&quot;highlighter-rouge&quot;&gt;nuke&lt;/code&gt; to &lt;strong&gt;revoke your certificates and provisioning profiles&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane match nuke development
fastlane match nuke distribution
fastlane match nuke enterprise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nuke&lt;/code&gt; will delete all. You cannot choose a particular cert or application identifier to kill.&lt;/p&gt;

&lt;p&gt;Like a nuclear bomb, it is pretty destructive.&lt;/p&gt;

&lt;h2 id=&quot;solution-2-remove-the-certs-in-repo&quot;&gt;Solution 2: Remove the certs in repo&lt;/h2&gt;

&lt;p&gt;There is another solution that is manual, but you can be selective.&lt;/p&gt;

&lt;p&gt;For example, I can renew my development certificate (keeping the distribution), or remove only certain provisioning profiles, or affect only a certain application.&lt;/p&gt;

&lt;p&gt;To do so, simply removing the files in the repository accordingly.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/certs/development/54V6LXXXXX.p12/cer&lt;/li&gt;
  &lt;li&gt;/profiles/development/whichever.mobileprovision&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then do &lt;strong&gt;git commit and push&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You should also go to Apple Developer portal and delete the provisioning profiles, otherwise you will end up with profile names with random digits as suffix (fastlane added to avoid name collision).&lt;/p&gt;

&lt;p&gt;When you run &lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane match&lt;/code&gt; again, it will re-create new cert and profiles.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 May 2019 14:31:00 +0800</pubDate>
        <link>https://samwize.com/2019/05/02/how-to-renew-cert-for-fastlane-match/</link>
        <guid isPermaLink="true">https://samwize.com/2019/05/02/how-to-renew-cert-for-fastlane-match/</guid>
        
        
        <category>fastlane</category>
        
      </item>
    
      <item>
        <title>Spotlight Indexing for Your App Content</title>
        <description>&lt;p&gt;If your app has any data or content, you will probably want to implement spotlight indexing, so that users can conveniently search in spotlight.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://developer.apple.com/library/archive/documentation/General/Conceptual/AppSearch/Art/numbers_2x.png&quot; alt=&quot;A searched item&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-create-the-searchable-items&quot;&gt;1. Create the searchable items&lt;/h2&gt;

&lt;p&gt;Let’s start with creating &lt;code class=&quot;highlighter-rouge&quot;&gt;CSSearchableItem&lt;/code&gt; for a model in the app. We use the model &lt;code class=&quot;highlighter-rouge&quot;&gt;station&lt;/code&gt; as an example.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CoreSpotlight&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MobileCoreServices&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createSearchableItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Station&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CSSearchableItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attributeSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CSSearchableItemAttributeSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;itemContentType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kUTTypeData&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contentDescription&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thumbnailData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pngData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CSSearchableItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;uniqueIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;domainIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;station&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above is the minimal data that you are recommended to provide. You could provide more &lt;a href=&quot;https://developer.apple.com/documentation/corespotlight/cssearchableitemattributeset&quot;&gt;metadata&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;2-index-them-all&quot;&gt;2. Index them all&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;indexAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;stations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createSearchableItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;CSSearchableIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;indexSearchableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;logError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localizedDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;CSSearchableIndex&lt;/code&gt;, you add your items to the index. Do a search, and you should see in spotlight results.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PITFALL: Simulator might not work, so try on a real device.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-handle-when-tap-on-an-item&quot;&gt;3. Handle when tap on an item&lt;/h2&gt;

&lt;p&gt;In your app delegate, implement &lt;code class=&quot;highlighter-rouge&quot;&gt;application:continueUserActivity:restorationHandler:&lt;/code&gt;, the user activity handoff method.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSUserActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;restorationHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UIUserActivityRestoring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]?)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activityType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CSSearchableItemActionType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;identifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;CSSearchableItemActivityIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Handle it. Navigate to a certain screen, or perform certain action.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The same app delegate method is &lt;a href=&quot;https://samwize.com/2017/11/10/guide-to-universal-links/&quot;&gt;used for universal link&lt;/a&gt; too.&lt;/p&gt;

&lt;h2 id=&quot;4-maintain-the-index&quot;&gt;4. Maintain the index&lt;/h2&gt;

&lt;p&gt;To update an item, use &lt;code class=&quot;highlighter-rouge&quot;&gt;indexSearchableItems()&lt;/code&gt; with the same &lt;code class=&quot;highlighter-rouge&quot;&gt;uniqueIdentifier&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To delete, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;deleteSearchableItemsWithIdentifiers&lt;/code&gt; and &lt;a href=&quot;https://developer.apple.com/documentation/corespotlight/cssearchableindex&quot;&gt;other methods&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Apr 2019 15:49:43 +0800</pubDate>
        <link>https://samwize.com/2019/04/26/spotlight-indexing-for-your-app-content/</link>
        <guid isPermaLink="true">https://samwize.com/2019/04/26/spotlight-indexing-for-your-app-content/</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Binding With Array Controller</title>
        <description>&lt;p&gt;In my &lt;a href=&quot;/2018/12/06/guide-to-binding-nstableview-to-nsfetchedresultscontroller/&quot;&gt;first guide to binding&lt;/a&gt;, it uses &lt;code class=&quot;highlighter-rouge&quot;&gt;NSFetchedResultsController&lt;/code&gt;, which is tightly coupled to the Core Data framework.&lt;/p&gt;

&lt;p&gt;It is not necessary (of course) to bind to Core Data models.&lt;/p&gt;

&lt;p&gt;This guide will be more generic, providing a guide to binding to a plain old object model.&lt;/p&gt;

&lt;h2 id=&quot;the-model&quot;&gt;The Model&lt;/h2&gt;

&lt;p&gt;Let’s use a simple model &lt;code class=&quot;highlighter-rouge&quot;&gt;MyData&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;@objc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Any member variable such as &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; has to be annotated with &lt;code class=&quot;highlighter-rouge&quot;&gt;@objc&lt;/code&gt;, because that’s how the old world works and provides.&lt;/p&gt;

&lt;h2 id=&quot;array-controller&quot;&gt;Array Controller&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NSArrayController&lt;/code&gt; manages the models.&lt;/p&gt;

&lt;p&gt;It does NOT hold the models, but simply manages it in terms of sorting, filtering, and CRUD operations.&lt;/p&gt;

&lt;p&gt;It is common to add the &lt;code class=&quot;highlighter-rouge&quot;&gt;NSArrayController&lt;/code&gt; object in a storyboard. Then set up as such:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In Attributes Inspector:
    &lt;ul&gt;
      &lt;li&gt;Mode is class&lt;/li&gt;
      &lt;li&gt;Class name is &lt;code class=&quot;highlighter-rouge&quot;&gt;MyApp.MyData&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;The prefix &lt;code class=&quot;highlighter-rouge&quot;&gt;MyApp&lt;/code&gt; is necessary, and it is your target’s &lt;strong&gt;Product Module Name&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;In Binding Inspector &amp;gt; Controller Content:
    &lt;ul&gt;
      &lt;li&gt;Bind to your view controller (usually) eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;MyListViewController&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Model Key Path is &lt;code class=&quot;highlighter-rouge&quot;&gt;self.myDataList&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;view-controller&quot;&gt;View Controller&lt;/h2&gt;

&lt;p&gt;It is a good time now to show you what your view controller looks like.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-self&quot;&gt;class MyListViewController: NSViewController {
    @objc dynamic var myDataList = [MyData]()
    @objc dynamic var sorts = [NSSortDescriptor]()
    @objc dynamic var filter: NSPredicate?
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;myDataList&lt;/code&gt; is the actual models that the view controller holds. It must be prefix with &lt;code class=&quot;highlighter-rouge&quot;&gt;@objc&lt;/code&gt; once again.&lt;/p&gt;

&lt;p&gt;Remember: The &lt;code class=&quot;highlighter-rouge&quot;&gt;NSArrayController&lt;/code&gt; is managing these models. You don’t mutate the array controller directly.&lt;/p&gt;

&lt;p&gt;Whenever you want to update your model, mutate &lt;code class=&quot;highlighter-rouge&quot;&gt;myDataList&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;table-view&quot;&gt;Table View&lt;/h2&gt;

&lt;p&gt;Next, we bind the array controller to the table view.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In Attributes inspector, set &lt;strong&gt;Content Mode&lt;/strong&gt; to &lt;strong&gt;View Based&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In Bindings inspector, bind &lt;strong&gt;Content&lt;/strong&gt; to Array Controller. The Controller Key should already be &lt;code class=&quot;highlighter-rouge&quot;&gt;arrangedObjects&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Select the actual view to bind eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;NSTextField&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;NSDatePicker&lt;/code&gt; etc&lt;/li&gt;
  &lt;li&gt;In Bindings inspector, bind &lt;strong&gt;Value&lt;/strong&gt; to &lt;strong&gt;Table Cell View&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Set the &lt;strong&gt;Model Key Path&lt;/strong&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;objectValue.name&lt;/code&gt; (your model’s attribute!)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sort--filter&quot;&gt;Sort &amp;amp; Filter&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Select Array Controller&lt;/strong&gt; &amp;gt; Bindings inspector &amp;gt; Sort Descriptors &amp;gt; Bind to the view controller&lt;/li&gt;
  &lt;li&gt;Set Model Key Path to &lt;code class=&quot;highlighter-rouge&quot;&gt;self.sorts&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Similarly, for filter bind to &lt;code class=&quot;highlighter-rouge&quot;&gt;self.filter&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Init &lt;code class=&quot;highlighter-rouge&quot;&gt;sorts&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;viewDidLoad&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Mutate them, and the views will be updated immediately&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;sort-when-clicking-on-the-table-column-header&quot;&gt;Sort when clicking on the table column header&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Select Table View&lt;/strong&gt; &amp;gt; Bindings inspector &amp;gt; Sort Descriptors &amp;gt; Bind to the view controller&lt;/li&gt;
  &lt;li&gt;Set Model Key Path to &lt;code class=&quot;highlighter-rouge&quot;&gt;self.sorts&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Select a table column &amp;gt; Bindings inspector &amp;gt; Value &amp;gt; Bind to Array Controller&lt;/li&gt;
  &lt;li&gt;Set the model key path eg. “name”&lt;/li&gt;
  &lt;li&gt;Make sure Creates Sort Descriptor is enabled&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;selection&quot;&gt;Selection&lt;/h2&gt;

&lt;p&gt;When you select rows in the table view, you should bind it to the array controller too.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Select Table View &amp;gt; Bindings inspector &amp;gt; Selection Indexes &amp;gt; Bind to the Array Controller&lt;/li&gt;
  &lt;li&gt;Set Controller Key to &lt;code class=&quot;highlighter-rouge&quot;&gt;selectionIndexes&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;delete-selected-rows&quot;&gt;Delete Selected Rows&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;@IBAction&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deleteSelectedRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arrayController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;atArrangedObjectIndexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arrayController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectionIndexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I have omitted the obvious: Add a button with the action to the above function, adding the array controller outlet to the view controller.&lt;/p&gt;

&lt;h2 id=&quot;add-new-row&quot;&gt;Add New Row&lt;/h2&gt;

&lt;p&gt;Similarly, you can have a button to add new model(s).&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;@IBAction&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;newModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arrayController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 05 Apr 2019 11:43:10 +0800</pubDate>
        <link>https://samwize.com/2019/04/05/binding-with-array-controller/</link>
        <guid isPermaLink="true">https://samwize.com/2019/04/05/binding-with-array-controller/</guid>
        
        
        <category>macOS</category>
        
      </item>
    
  </channel>
</rss>
