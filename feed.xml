<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>@samwize</title>
    <description>¯\_(ツ)_/¯
</description>
    <link>https://samwize.com/</link>
    <atom:link href="https://samwize.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 10 Oct 2020 13:48:40 +0800</pubDate>
    <lastBuildDate>Sat, 10 Oct 2020 13:48:40 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>How to Handle 3D Touch Shortcut for UIScene</title>
        <description>&lt;p&gt;Following up on the post on &lt;a href=&quot;/2020/10/09/how-to-handle-deeplink-for-uiscene/&quot;&gt;deeplink for UIScene&lt;/a&gt;, this post will be on handling 3D/Force touch shortcuts for UIScene. Again, because of &lt;code class=&quot;highlighter-rouge&quot;&gt;UIScene&lt;/code&gt;, the old way of using AppDelegate will no longer work. So this post is a refresh.&lt;/p&gt;

&lt;p&gt;We also had covered &lt;a href=&quot;/2016/04/25/tutorial-on-creating-app-shortcut-with-3d-touch/&quot;&gt;App Shortcuts&lt;/a&gt;, including setting up of dynamic shortcuts, so we won’t cover here.&lt;/p&gt;

&lt;h2 id=&quot;1-setup-static-shortcuts&quot;&gt;1. Setup static shortcuts&lt;/h2&gt;

&lt;p&gt;In Info.plist, static shortcuts can be configured like this:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIApplicationShortcutItems&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIApplicationShortcutItemIconType&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;UIApplicationShortcutIconTypeCaptureVideo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIApplicationShortcutItemTitle&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Record Video&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIApplicationShortcutItemType&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;recordVideo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;UIApplicationShortcutItemType&lt;/code&gt; is like an identifier which will be used in code later.&lt;/p&gt;

&lt;p&gt;For more information on setting up app shortcuts, refer to &lt;a href=&quot;https://developer.apple.com/documentation/uikit/menus_and_shortcuts/add_home_screen_quick_actions&quot;&gt;Apple’s doc&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;2-handle-when-app-is-running&quot;&gt;2. Handle when app is running&lt;/h2&gt;

&lt;p&gt;Implement in &lt;code class=&quot;highlighter-rouge&quot;&gt;SceneDelegate&lt;/code&gt; the protocol &lt;code class=&quot;highlighter-rouge&quot;&gt;UIWindowSceneDelegate&lt;/code&gt;. Our custom method &lt;code class=&quot;highlighter-rouge&quot;&gt;handleShortcut()&lt;/code&gt; will identify which shortcut it is and handle accordingly.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;windowScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;windowScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIWindowScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performActionFor&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;shortcutItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIApplicationShortcutItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;handleShortcut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shortcutItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;@discardableResult&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handleShortcut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;shortcutItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIApplicationShortcutItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shortcutItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;recordVideo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Handle this&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-handle-cold-start&quot;&gt;3. Handle cold start&lt;/h2&gt;

&lt;p&gt;As for cold start, you will need to handle in &lt;code class=&quot;highlighter-rouge&quot;&gt;scene(_:willConnectTo:options:)&lt;/code&gt; instead.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;willConnectTo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UISceneSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;connectionOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIScene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ConnectionOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Your typical window setup, or even handleDeepLink..&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;shortcutItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connectionOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shortcutItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;handleShortcut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shortcutItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 10 Oct 2020 13:32:25 +0800</pubDate>
        <link>https://samwize.com/2020/10/10/how-to-handle-3d-touch-shortcut-for-uiscene/</link>
        <guid isPermaLink="true">https://samwize.com/2020/10/10/how-to-handle-3d-touch-shortcut-for-uiscene/</guid>
        
        
        <category>UIScene</category>
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>How to Handle Deeplink for UIScene</title>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UIScene&lt;/code&gt; was introduced in iOS 13, and it replaced many functionalities of &lt;code class=&quot;highlighter-rouge&quot;&gt;AppDelegate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you use &lt;code class=&quot;highlighter-rouge&quot;&gt;UIScene&lt;/code&gt;, then the old way of using &lt;code class=&quot;highlighter-rouge&quot;&gt;application(_:open:options:)&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;AppDelegate&lt;/code&gt; will NOT work anymore.&lt;/p&gt;

&lt;h2 id=&quot;1-basic-setup&quot;&gt;1. Basic setup&lt;/h2&gt;

&lt;p&gt;To handle deeplink, the Info.plist must have the &lt;code class=&quot;highlighter-rouge&quot;&gt;CFBundleURLTypes&lt;/code&gt; key added. In the example, we will have our app support a &lt;code class=&quot;highlighter-rouge&quot;&gt;myschema://&lt;/code&gt; deeplink.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;CFBundleURLTypes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;CFBundleTypeRole&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Editor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;CFBundleURLSchemes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;myschema&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-handle-when-app-is-running&quot;&gt;2. Handle when app is running&lt;/h2&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;SceneDelegate&lt;/code&gt;, add the following method:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;openURLContexts&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLContexts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UIOpenURLContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLContexts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Your method to handle the deeplink url&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;handleDeepLink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: There can be multiple URLs. The delegate method provides a set of &lt;code class=&quot;highlighter-rouge&quot;&gt;UIOpenURLContext&lt;/code&gt;. We are only interested in only the &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;. There is also an &lt;code class=&quot;highlighter-rouge&quot;&gt;options&lt;/code&gt; in the context.&lt;/p&gt;

&lt;h2 id=&quot;3-handle-cold-start&quot;&gt;3. Handle cold start&lt;/h2&gt;

&lt;p&gt;When the app is not yet running, you need to handle in &lt;code class=&quot;highlighter-rouge&quot;&gt;scene(_:willConnectTo:options:)&lt;/code&gt; instead.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;willConnectTo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UISceneSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;connectionOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIScene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ConnectionOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// The typical window set up&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;windowScene&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIWindowScene&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;windowScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootViewController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MainViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;makeKeyAndVisible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connectionOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlContexts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;handleDeepLink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The code is similar, and again we use the same &lt;code class=&quot;highlighter-rouge&quot;&gt;handleDeepLink()&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Oct 2020 16:35:31 +0800</pubDate>
        <link>https://samwize.com/2020/10/09/how-to-handle-deeplink-for-uiscene/</link>
        <guid isPermaLink="true">https://samwize.com/2020/10/09/how-to-handle-deeplink-for-uiscene/</guid>
        
        
        <category>UIScene</category>
        
        <category>deeplink</category>
        
      </item>
    
      <item>
        <title>iOS 14 Photo Access for Add Only</title>
        <description>&lt;p&gt;iOS 14 changed the permission levels when you access photo library, and many apps will now prompt users to either:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Select photos&lt;/li&gt;
  &lt;li&gt;Allow all&lt;/li&gt;
  &lt;li&gt;Deny access&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This happens if you use &lt;code class=&quot;highlighter-rouge&quot;&gt;PHPhotoLibrary.requestAuthorization(...)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;but-what-if-write-only&quot;&gt;But what if write only?&lt;/h2&gt;

&lt;p&gt;If you are writing to photo library, without the need to read, the same prompt will be used.&lt;/p&gt;

&lt;p&gt;That is no good.&lt;/p&gt;

&lt;p&gt;There is a better way for write-only apps, but you have to update your code.&lt;/p&gt;

&lt;h2 id=&quot;1-use-addonly&quot;&gt;1. Use addOnly&lt;/h2&gt;

&lt;p&gt;There is a &lt;a href=&quot;https://developer.apple.com/documentation/photokit/phphotolibrary/3616053-requestauthorization&quot;&gt;NEW iOS 14 method&lt;/a&gt; in PHPhotoLibrary framework  with a &lt;code class=&quot;highlighter-rouge&quot;&gt;addOnly&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PHPhotoLibrary.requestAuthorization(for: .addOnly, handler: handler)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want to support pre iOS 14, then you will want to use &lt;a href=&quot;/2020/07/22/platform-conditional-codes/&quot;&gt;platform conditional codes&lt;/a&gt; like this:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;PHAuthorizationStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#available(iOS 14, *)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;PHPhotoLibrary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;requestAuthorization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addOnly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;PHPhotoLibrary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;requestAuthorization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-add-nsphotolibraryaddusagedescription&quot;&gt;2. Add NSPhotoLibraryAddUsageDescription&lt;/h2&gt;

&lt;p&gt;In Info.plist, add the key &lt;code class=&quot;highlighter-rouge&quot;&gt;NSPhotoLibraryAddUsageDescription&lt;/code&gt; and a string to describe why you need the access.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Aug 2020 20:31:07 +0800</pubDate>
        <link>https://samwize.com/2020/08/24/ios-14-photo-access-add-only/</link>
        <guid isPermaLink="true">https://samwize.com/2020/08/24/ios-14-photo-access-add-only/</guid>
        
        
        <category>Photo</category>
        
      </item>
    
      <item>
        <title>Navigating Xcode 12 and Tabs</title>
        <description>&lt;p&gt;Xcode 12 introduced a new tab system call &lt;strong&gt;Document Tabs&lt;/strong&gt;. The old system is &lt;em&gt;Window Tabs&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The new system screwed up many of the keyboard shortcuts I am used to.&lt;/p&gt;

&lt;p&gt;One of the most troubling is that I can’t create a tab with &lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ T&lt;/code&gt; anymore.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: This is written as of Xcode 12 beta 5, so things might change. It also depends on Xcode Preferences &amp;gt; Navigation. I use the Open in Place and Uses Tab.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;opening-a-file-in-document-tabs&quot;&gt;Opening a file in document tabs&lt;/h2&gt;

&lt;p&gt;When you open a file, there is a new concept between 1) opening temporarily and 2) keeping in place.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Click&lt;/code&gt; a file to show in current editor. But this is only &lt;em&gt;temporarily&lt;/em&gt;. If you click another file, it will replace the temporary file.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Double click&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ ⌥ O&lt;/code&gt; a file to keep in the editor.&lt;/p&gt;

&lt;p&gt;Hence, my most common workflow now consists of 2 steps.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ ⇧ O&lt;/code&gt; to quick search for a file&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ ⌥ O&lt;/code&gt; to keep it in place&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Other usual shortcuts:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ ⇧ [&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;]&lt;/code&gt; to navigate left and right of the tabs.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ W&lt;/code&gt; to close a document tab.&lt;/p&gt;

&lt;h2 id=&quot;window-tabs&quot;&gt;Window tabs&lt;/h2&gt;

&lt;p&gt;This seems like &lt;em&gt;deprecated&lt;/em&gt;. Or we should try to minimize the use.&lt;/p&gt;

&lt;p&gt;You cannot create a window tab using &lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ T&lt;/code&gt; anymore. If you want to, make sure &lt;code class=&quot;highlighter-rouge&quot;&gt;View &amp;gt; Show Window Tab Bar&lt;/code&gt;, then click on the &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; on the right of the bar.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ ⇧ W&lt;/code&gt; to close window tab.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ ⌥ ⇧ T&lt;/code&gt; to rename a window tab.&lt;/p&gt;

&lt;h2 id=&quot;make-use-of-editors&quot;&gt;Make use of Editors&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌥ Click&lt;/code&gt; to open a file in the &lt;strong&gt;split editor&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ CTRL T&lt;/code&gt; to open new editor.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ ⇧ CTRL W&lt;/code&gt; to close split editor&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Drag&lt;/code&gt; the tab to split editor, or to another window tab.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌥ Click&lt;/code&gt; on a file to open in next editor.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⇧ ⌥ Click&lt;/code&gt; on a file, and move with mouse to an editor&lt;/p&gt;

&lt;h2 id=&quot;other-shortcuts&quot;&gt;Other shortcuts&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ ⇧ J&lt;/code&gt; to locate the file in the project navigator&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL 6&lt;/code&gt; to dropdown the classes, methods and properties of a file. Following that, type to search further.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘ ⇧ A&lt;/code&gt; on a code under caret to show ⌥ions such as Callers, Rename, etc&lt;/p&gt;

&lt;p&gt;Also &lt;a href=&quot;/2012/09/26/xcode-4-dot-5-tips-and-tricks/&quot;&gt;Xcode tips in 2012&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Aug 2020 22:47:10 +0800</pubDate>
        <link>https://samwize.com/2020/08/21/navigating-xcode-12-and-tabs/</link>
        <guid isPermaLink="true">https://samwize.com/2020/08/21/navigating-xcode-12-and-tabs/</guid>
        
        
        <category>Xcode</category>
        
      </item>
    
      <item>
        <title>Regex Replace Using Atom</title>
        <description>&lt;p&gt;Xcode renaming is good, but in some cases it can’t help.&lt;/p&gt;

&lt;p&gt;Often, I go back to using &lt;a href=&quot;https://flight-manual.atom.io/using-atom/sections/find-and-replace/&quot;&gt;Atom&lt;/a&gt; to find and replace, using regex.&lt;/p&gt;

&lt;h2 id=&quot;1-find&quot;&gt;1. Find&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Open a file (or a directory if multiple files) in Atom&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CMD+C&lt;/code&gt; to copy the string to find&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CMD+SHIFT+F&lt;/code&gt; to bring up Find panel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you bring up Atom’s Find panel, the copied string will be automatically populated in the find field, and best of all – &lt;strong&gt;automatically escape regex characters&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/atom-find-replace.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;See the &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; added in the Find textfield:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;disease\.cure\(with: &quot;vaccine&quot;\)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: Make sure the regex mode (the &lt;code class=&quot;highlighter-rouge&quot;&gt;.*&lt;/code&gt; option) is enabled.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-captured-group&quot;&gt;2. Captured Group&lt;/h2&gt;

&lt;p&gt;Using the following example, we want to find &lt;em&gt;some functions with string&lt;/em&gt;, and refactor them to a simple form:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Original&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;disease&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;vaccine&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;disease&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mask&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// To replace and become&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vaccine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asCure&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asCure&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To do that, we need to add captured group for any strings (vaccine, mask, etc). We do that with &lt;code class=&quot;highlighter-rouge&quot;&gt;(.*?)&lt;/code&gt;, capturing the shortest possible string.&lt;/p&gt;

&lt;p&gt;We edit Find to:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;disease\.cure\(with: &quot;(.*?)&quot;\)&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-replace&quot;&gt;3. Replace&lt;/h2&gt;

&lt;p&gt;Finally, we replace with:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$1.asCure&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The first captured group is &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt;. If you have more captured groups, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;$2&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;$3&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/atom-find-replace-final.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Aug 2020 10:39:34 +0800</pubDate>
        <link>https://samwize.com/2020/08/17/regex-replace-using-atom/</link>
        <guid isPermaLink="true">https://samwize.com/2020/08/17/regex-replace-using-atom/</guid>
        
        
        <category>Xcode</category>
        
      </item>
    
      <item>
        <title>Apple Is Killing Radio Apps</title>
        <description>&lt;p&gt;Amid the public outcry of Apple being a draconian monopoly, Apple is also clamping down on Internet radio apps.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Epic Games is trolling Apple with a &amp;quot;1984&amp;quot; Fortnite video. It&amp;#39;s pretty... epic &lt;a href=&quot;https://t.co/4a8DJfJa5b&quot;&gt;pic.twitter.com/4a8DJfJa5b&lt;/a&gt;&lt;/p&gt;&amp;mdash; Tom Warren (@tomwarren) &lt;a href=&quot;https://twitter.com/tomwarren/status/1294004071616086024?ref_src=twsrc%5Etfw&quot;&gt;August 13, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;my-radio-app-rejected&quot;&gt;MY Radio app rejected&lt;/h2&gt;

&lt;p&gt;A recent update of &lt;a href=&quot;https://just2us.com/myradio/&quot;&gt;my 7-year-old radio streaming app&lt;/a&gt; is being rejected, &lt;em&gt;violating&lt;/em&gt; &lt;a href=&quot;https://developer.apple.com/app-store/review/guidelines/&quot;&gt;Guideline 5.2&lt;/a&gt; on Intellectual Property:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;5.2.3 Audio/Video Downloading: Apps should not facilitate illegal file sharing or include the ability to save, convert, or download media from third-party sources (e.g. Apple Music, YouTube, SoundCloud, Vimeo, etc.) without explicit authorization from those sources. Streaming of audio/video content may also violate Terms of Use, so be sure to check before your app accesses those services. Documentation must be provided upon request.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have appealed, but failed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/my-radio-appeal.jpg&quot; alt=&quot;&quot; class=&quot;border&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Interestingly, the app reviewer added that their guidelines are a &lt;strong&gt;living document&lt;/strong&gt;, which constantly evolve.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The App Store Review Guidelines are a living document; new apps presenting new questions may result in new rules at any time. While your app may have been compliant at the time it was first submitted, it is not in compliance at this time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;other-radio-apps-too&quot;&gt;Other radio apps too&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gabekangas.com/blog/2020/08/apple-has-shut-down-the-bat-player/&quot;&gt;Bat Player&lt;/a&gt; is being rejected for the same reason. The developer got on a phone call, and the app reviewer said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I’m sure most of these channels are being run by the same company, so you can get many taken care of by contacting their parent organizations.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;😂 There are probably thousands of such organizations, and they won’t want to deal with thousands of app developer requests.&lt;/p&gt;

&lt;h2 id=&quot;apple-is-the-police&quot;&gt;Apple is the police&lt;/h2&gt;

&lt;p&gt;I don’t know our radio apps infringe on any IP, or not.&lt;/p&gt;

&lt;p&gt;But the fact is: &lt;strong&gt;Apple takes matters into their own hands.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;They remove apps, or limit their features, as and when they desire with their &lt;em&gt;living guidelines&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;They always said they review apps for the good of iPhone users, but &lt;em&gt;who knows&lt;/em&gt; the real motives. I am wary of Apple. 🤥&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/broken-apple.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Aug 2020 10:31:27 +0800</pubDate>
        <link>https://samwize.com/2020/08/14/apple-is-killing-radio-apps/</link>
        <guid isPermaLink="true">https://samwize.com/2020/08/14/apple-is-killing-radio-apps/</guid>
        
        
        <category>Apple</category>
        
      </item>
    
      <item>
        <title>Apple Is Guilty</title>
        <description>&lt;p&gt;I am an iPhone developer since 2008, and I am grateful for the mobile revolution that they started.&lt;/p&gt;

&lt;p&gt;But now, I find Apple &lt;em&gt;guilty&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apple stifles innovation.&lt;/strong&gt; Even if they’re not a monopoly, they are definitely a bully. (Do watch the &lt;a href=&quot;https://youtu.be/H6eYLCxxQdA&quot;&gt;congress hearing&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Tim Cook said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We apply all rules to all developers equally.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Equality my ass.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/netflix-app-store-email.jpg&quot; alt=&quot;&quot; class=&quot;border&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bloomberg.com/news/articles/2020-07-29/apple-considered-taking-40-cut-from-subscriptions-emails-show&quot;&gt;Netflix&lt;/a&gt; has a &lt;strong&gt;special deal&lt;/strong&gt; where they pay only 15%, while other developers pay 30%. Other &lt;em&gt;“reader apps”&lt;/em&gt; also had special treatment.&lt;/p&gt;

&lt;p&gt;Or if you can &lt;a href=&quot;https://techcrunch.com/2020/06/18/interview-apples-schiller-says-position-on-hey-app-is-unchanged-and-no-rules-changes-are-imminent/&quot;&gt;kick up a fuss&lt;/a&gt;, some SVP will do something for you.&lt;/p&gt;

&lt;p&gt;The treatments are &lt;a href=&quot;https://youdownloadtheappanditdoesntwork.com&quot;&gt;never consistent&lt;/a&gt;, partly because the &lt;strong&gt;rules are always changing&lt;/strong&gt;, and app reviewers varied in their line of work.&lt;/p&gt;

&lt;p&gt;I have &lt;a href=&quot;/2020/04/19/taking-down-concert-camera/&quot;&gt;no&lt;/a&gt; &lt;a href=&quot;/2019/09/20/i-am-no-longer-surprise-over-app-store-review-rejections/&quot;&gt;shortage&lt;/a&gt; of app review rejections, and the latest came 2 days ago, and it again show how inconsistent the rules are.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/radio_streams_need_authorization.jpg&quot; alt=&quot;&quot; class=&quot;border&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://just2us.com/sgradio/&quot;&gt;SG Radio&lt;/a&gt; is an Internet radio app that I have launched 10 years ago. Surprisingly, they (or this app reviewer) now deem streaming radio stations as IP infringement and asked for authorization documents.&lt;/p&gt;

&lt;p&gt;I am worried about my livelihood, which is &lt;em&gt;solely&lt;/em&gt; on Apple platform.&lt;/p&gt;

&lt;p&gt;Today, I am seriously considering other open platforms.&lt;/p&gt;

&lt;p&gt;As &lt;a href=&quot;https://daringfireball.net/2020/07/parsing_cooks_opening_statement&quot;&gt;Daring Fireball&lt;/a&gt; puts it:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To omit the fact that there was — dating back to the mid-’90s, well over a decade before the iPhone App Store — a thriving market for software sold (and downloaded) directly over a thing called “The Internet” is sophistry.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/broken-apple.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jul 2020 16:51:43 +0800</pubDate>
        <link>https://samwize.com/2020/07/30/apple-is-guilty/</link>
        <guid isPermaLink="true">https://samwize.com/2020/07/30/apple-is-guilty/</guid>
        
        
        <category>Apple</category>
        
      </item>
    
      <item>
        <title>What Is Wrong With Xcode 12 Tabs</title>
        <description>&lt;p&gt;In new Xcode 12, there is a “new” tab system. There is a tabs within tabs. Something along &lt;em&gt;window tab&lt;/em&gt; or &lt;em&gt;document tab&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I cannot figure out what’s the point, except it frustrates me with how I navigate to previous/next tab using CMD+SHIFT+[ or ].&lt;/p&gt;

&lt;p&gt;And they haven’t fix in Beta 3.. so I switch back to the original tabs I know.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/xcode-12-tab-settings.jpg&quot; alt=&quot;Xcode Preference - Change to Open in place&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jul 2020 10:02:02 +0800</pubDate>
        <link>https://samwize.com/2020/07/28/what-is-wrong-with-xcode-12-tabs/</link>
        <guid isPermaLink="true">https://samwize.com/2020/07/28/what-is-wrong-with-xcode-12-tabs/</guid>
        
        
        <category>Xcode</category>
        
      </item>
    
      <item>
        <title>Platform Conditional Codes</title>
        <description>&lt;p&gt;Swift has provided us quite a few ways to write codes that work for specific platform, version, and language. Examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Run code only for only iOS 13&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Run code only for Swift 5&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Run code only if can import SwiftUI&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;available&quot;&gt;#available&lt;/h2&gt;

&lt;p&gt;This is a &lt;strong&gt;runtime check&lt;/strong&gt;, so you can use in regular conditional statements.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#available(iOS 13.6, macOSApplicationExtension 10.15, *)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;someOtherBoolean&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Fallback code&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://docs.swift.org/swift-book/ReferenceManual/Statements.html#grammar_availability-condition&quot;&gt;grammar&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;The trailing &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; denotes that it is available for all other platforms, so that future ones such as &lt;code class=&quot;highlighter-rouge&quot;&gt;glassOS&lt;/code&gt; will be supported, when release.&lt;/p&gt;

&lt;h2 id=&quot;available-1&quot;&gt;@available&lt;/h2&gt;

&lt;p&gt;This is an &lt;a href=&quot;https://docs.swift.org/swift-book/ReferenceManual/Attributes.html&quot;&gt;attribute&lt;/a&gt; that applies to types and properties. The grammar is same as &lt;code class=&quot;highlighter-rouge&quot;&gt;#available&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;@available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;My12Monkeys&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also specify for language version:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;@available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;swift&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NOTE: Must be a lower case 's'&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swift5Only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also annotate more info like this:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;@available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iOS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deprecated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;No reason&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;renamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Singapore&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Singapura&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also stack multiple attributes.&lt;/p&gt;

&lt;h2 id=&quot;canimport&quot;&gt;canImport()&lt;/h2&gt;

&lt;p&gt;This &lt;a href=&quot;https://github.com/apple/swift-evolution/blob/master/proposals/0075-import-test.md&quot;&gt;tests for modules&lt;/a&gt; availability.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#if canImport(SwiftUI)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// SwiftUI code&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#else&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Fallback to UIKit&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;related&quot;&gt;Related&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2019/02/26/preprocessor-codes-for-swift/&quot;&gt;Preprocessor Codes for Swift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 22 Jul 2020 21:45:49 +0800</pubDate>
        <link>https://samwize.com/2020/07/22/platform-conditional-codes/</link>
        <guid isPermaLink="true">https://samwize.com/2020/07/22/platform-conditional-codes/</guid>
        
        
      </item>
    
      <item>
        <title>NavigationView for iOS and macOS</title>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationView&lt;/code&gt; is the SwiftUI component to creating the UIKit’s &lt;em&gt;equivalent&lt;/em&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;UINavigationController&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;UI/NSSplitViewController&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;While it is possible to share code between iOS and macOS, this post will show how to do for each platform individually, for clarity.&lt;/p&gt;

&lt;p&gt;There are also 2 types to know:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Standard Navigation: push and pop like &lt;code class=&quot;highlighter-rouge&quot;&gt;UINavigationController&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Split view/columns&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;ios-standard-navigation&quot;&gt;iOS: Standard Navigation&lt;/h2&gt;

&lt;p&gt;This is simple, using the &lt;code class=&quot;highlighter-rouge&quot;&gt;StackNavigationViewStyle()&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;NavigationView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// This is the root view&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;NavigationLink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pushed view&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Push&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;navigationViewStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;StackNavigationViewStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;ios-split-view&quot;&gt;iOS: Split view&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/swiftui/navigationview&quot;&gt;NavigationView&lt;/a&gt; inits with a &lt;code class=&quot;highlighter-rouge&quot;&gt;ViewBuilder&lt;/code&gt; where the first view is the first panel, usually the sidebar. The subsequent views are the placeholders for the other panels.&lt;/p&gt;

&lt;p&gt;The navigation view uses &lt;code class=&quot;highlighter-rouge&quot;&gt;DoubleColumnNavigationViewStyle()&lt;/code&gt;, which is a split view with 2 columns. But you can do similarly for 3 columns.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SplitView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;NavigationView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;panel1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// View 1&lt;/span&gt;

            &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Placeholder for Panel 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// View 2&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;navigationViewStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DoubleColumnNavigationViewStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;panel1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;VStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Panel 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;NavigationLink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;panel2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Change panel 2&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Go to Panel 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;panel2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Actual Panel 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;macos&quot;&gt;macOS&lt;/h2&gt;

&lt;p&gt;The biggest difference with macOS is that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You need to provide the sizes for the panels, using &lt;code class=&quot;highlighter-rouge&quot;&gt;frame&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;There’s no &lt;code class=&quot;highlighter-rouge&quot;&gt;StackNavigationViewStyle()&lt;/code&gt;, so only column style is available&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SplitView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;NavigationView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;panel1&lt;/span&gt;

            &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Placeholder for Panel 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;maxWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;maxHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Fill content view&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// MUST provide the &quot;window size&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;minWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;maxWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;minHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;maxHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;panel1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;VStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Panel 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;NavigationLink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;panel2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Go to Panel 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;minWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;idealWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;maxWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;maxHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Sidebar width&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;panel2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Panel 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;maxWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;maxHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infinity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Fill content view&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A typical layout is to have a smaller sidebar on the left, and a content view that fills the rest of the window.&lt;/p&gt;

&lt;p&gt;Again, &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationView&lt;/code&gt; can manage multiple columns.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jul 2020 18:02:18 +0800</pubDate>
        <link>https://samwize.com/2020/07/21/guide-to-navigationview-for-ios-and-macos/</link>
        <guid isPermaLink="true">https://samwize.com/2020/07/21/guide-to-navigationview-for-ios-and-macos/</guid>
        
        
        <category>SwiftUI</category>
        
      </item>
    
  </channel>
</rss>
