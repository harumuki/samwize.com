<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>@samwize</title>
    <description>¬Ø\_(„ÉÑ)_/¬Ø
</description>
    <link>https://samwize.com/</link>
    <atom:link href="https://samwize.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 04 Oct 2019 17:39:21 +0800</pubDate>
    <lastBuildDate>Fri, 04 Oct 2019 17:39:21 +0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Guide to Submitting Promotional Artwork to App Store Connect</title>
        <description>&lt;p&gt;99% of my emails that comes from App Store Connect is nothing good, because they are often &lt;a href=&quot;/2019/09/20/i-am-no-longer-surprise-over-app-store-review-rejections/&quot;&gt;rejections&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Except this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/appstore-featured-email.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;may-be-getting-featured&quot;&gt;May be getting featured!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dualgram.com&quot;&gt;Dualgram&lt;/a&gt; is my first app (in over 10 years!) that has the chance to be featured. That‚Äôs terribly good news for any iOS indie developer!&lt;/p&gt;

&lt;p&gt;In the 5 days that I was preparing for the artwork, I learnt a lot. I hope this guide would be useful for first-timers.&lt;/p&gt;

&lt;h2 id=&quot;the-artworks-required&quot;&gt;The artwork(s) required&lt;/h2&gt;

&lt;p&gt;Apple is not absolutely clear on that. The App Store changes over the years probably added to the confusion.&lt;/p&gt;

&lt;p&gt;What they say is you have to submit what they asked for in the email, which for my case is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Artwork for the Apps Tab or Games Tab (4320x1080)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the email, they also mentioned &lt;strong&gt;Evergreen Art Required&lt;/strong&gt;. This is NOT another artwork, but just a requirement. Perhaps they plan on featuring Dualgram for a long long time? üòÅ&lt;/p&gt;

&lt;p&gt;There are &lt;a href=&quot;https://help.apple.com/asc/appspromoart/#/itc380080cd4&quot;&gt;other artworks&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Today Tab Card (3524x2160)&lt;/li&gt;
  &lt;li&gt;Supporting Imagery (4000x4000)&lt;/li&gt;
  &lt;li&gt;Title Treatment (4000x4000)&lt;/li&gt;
  &lt;li&gt;Product/Developer Page (4320x1080)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are also different ones for Mac and Apple TV, which I will not go into.&lt;/p&gt;

&lt;h2 id=&quot;templates&quot;&gt;Templates&lt;/h2&gt;

&lt;p&gt;When you &lt;a href=&quot;https://help.apple.com/asc/appspromoart/#/itc8ff78da56&quot;&gt;download the templates&lt;/a&gt; for (iOS) App Store, you might be confused like me.&lt;/p&gt;

&lt;p&gt;I started with ‚ÄúINSERT-APP-NAME_INSERT-APP-APPLE-ID_AppStore_Product-DeveloperPage.psd‚Äù. This is WRONG.&lt;/p&gt;

&lt;p&gt;The right one is ‚ÄúINSERT-APP-NAME_INSERT-APP-APPLE-ID_AppStore-ATV_Featuring.psd‚Äù. I was confused by the &lt;strong&gt;ATV&lt;/strong&gt; in the filename, which I interpreted as Apple TV, and ignored since that is not for my case.&lt;/p&gt;

&lt;p&gt;As I read the guide carefully, I begin to understand. The 2 have the same 4320x1080 dimensions, but the safe areas are different. And of course, they are displayed in different places.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/appstore-artworks.jpg&quot; alt=&quot;Examples on the App Store&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ATV_Featuring PSD is the right one, aka hero banner for iPhone/iPad/Apple Watch App Store.&lt;/p&gt;

&lt;h2 id=&quot;app-store-connect-dropwell&quot;&gt;App Store Connect Dropwell&lt;/h2&gt;

&lt;p&gt;When you have your PSD design, you will upload to App Store Connect. A ‚ÄúPromotional Artwork‚Äù tab will appear.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/appstore-connect-artwork-dropwell.jpg&quot; alt=&quot;&quot; class=&quot;border&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While you can upload to all the dropwells, you are only required to upload what they asked for.&lt;/p&gt;

&lt;p&gt;For me, it is the &lt;strong&gt;Featuring Artwork (Apps/Games Tabs and Apple Watch)&lt;/strong&gt;. Yep, seems like Apple Watch also uses the same template.&lt;/p&gt;

&lt;h2 id=&quot;dateline&quot;&gt;Dateline&lt;/h2&gt;

&lt;p&gt;The email stated clearly the dateline, which is just &lt;strong&gt;5 days&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It is actually sufficient time for just 1 artwork.&lt;/p&gt;

&lt;p&gt;But if you are like me, you will want to do the very best artwork possible, since chances like these are rare.&lt;/p&gt;

&lt;p&gt;And what if Apple team did not choose the app because the artwork quality is not good enough? &lt;em&gt;I start to panick..&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;hire-professional-designers&quot;&gt;Hire Professional Designers&lt;/h2&gt;

&lt;p&gt;I can design UI and play with &lt;a href=&quot;/2019/09/20/i-am-no-longer-surprise-over-app-store-review-rejections/&quot;&gt;app icon&lt;/a&gt;. But for such an important artwork, I prefer to leave it to professionals.&lt;/p&gt;

&lt;p&gt;I got some help from designer friends.&lt;/p&gt;

&lt;p&gt;To add to that, I start a design contest! Using DesignCrowd cost me $164.&lt;/p&gt;

&lt;p&gt;My plan is to submit &lt;strong&gt;multiple designs&lt;/strong&gt;, including my own design. This can be done by adding them as groups to the same PSD. Then let the Apple team decides what is best.&lt;/p&gt;

&lt;p&gt;But the plan failed.&lt;/p&gt;

&lt;h2 id=&quot;pitfall-once-approved-you-cannot-change&quot;&gt;Pitfall: Once approved, you cannot change&lt;/h2&gt;

&lt;p&gt;This is a noob mistake. Don‚Äôt be like me.&lt;/p&gt;

&lt;p&gt;Do NOT upload the design until you are sure it is what you want Apple to use.&lt;/p&gt;

&lt;p&gt;I receive a couple of reminder emails, became anxious, and so I uploaded my own backup design first.&lt;/p&gt;

&lt;p&gt;A few hours later, an email came.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/appstore-artwork-approved.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And I can no longer edit on App Store Connect..&lt;/p&gt;

&lt;p&gt;So, if my app is selected to be featured, my very own artwork will be displayed all over App Store.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Dualgram_1474345188_AppStore-ATV_Featuring.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seems like I could add that to my design portfolio üòÜ&lt;/p&gt;
</description>
        <pubDate>Fri, 04 Oct 2019 15:55:33 +0800</pubDate>
        <link>https://samwize.com/2019/10/04/guide-to-submitting-promotional-artwork-to-app-store-connect/</link>
        <guid isPermaLink="true">https://samwize.com/2019/10/04/guide-to-submitting-promotional-artwork-to-app-store-connect/</guid>
        
        
        <category>App Store</category>
        
      </item>
    
      <item>
        <title>Apple Search Ads Can Be Very Dumb</title>
        <description>&lt;p&gt;After launching &lt;a href=&quot;https://www.producthunt.com/posts/dualgram&quot;&gt;Dualgram&lt;/a&gt;, I give &lt;a href=&quot;https://searchads.apple.com/&quot;&gt;Apple Search Ads&lt;/a&gt; a try.&lt;/p&gt;

&lt;p&gt;I like their basic campaign, because it is a pay-per-install, and it is super easy to set up.&lt;/p&gt;

&lt;p&gt;But is it any good?&lt;/p&gt;

&lt;h2 id=&quot;very-high-cost&quot;&gt;Very high cost&lt;/h2&gt;

&lt;p&gt;After running for 3 days, the result is very poor, because the Cost-Per-Install (CPI) is very high. For a free app, this will be very hard to ROI.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/apple-search-app-basic-campaign.jpg&quot; alt=&quot;&quot; class=&quot;border&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I ramp up my CPI slowly, reaching an average of $0.50 per install. &lt;em&gt;Only 16 installs&lt;/em&gt;, after 3 days.&lt;/p&gt;

&lt;h2 id=&quot;who-are-seeing-the-ads&quot;&gt;Who are seeing the ads?&lt;/h2&gt;

&lt;p&gt;Basic campaign is based on Apple‚Äôs &lt;strong&gt;intelligent automation&lt;/strong&gt;, as &lt;a href=&quot;https://searchads.apple.com/basic/help/overview/&quot;&gt;quoted&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can‚Äôt specify any keywords or audience etc. You just tell Apple how much you willing to pay.&lt;/p&gt;

&lt;p&gt;How intelligent is the algorithm?&lt;/p&gt;

&lt;p&gt;I gave it a test and search my own app name.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/search-own-app.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Only one search result, yet they still show the Ad!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is dumb.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is equivalent to Apple stealing my money.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I took great effort to come up with unique app name so that users can easily find it. In such case, I cannot forgive Apple for charging me.&lt;/p&gt;

&lt;h2 id=&quot;advanced-campaign-has-no-device-targeting&quot;&gt;Advanced campaign has no device targeting&lt;/h2&gt;

&lt;p&gt;So I give their advanced campaign a try, taking things into my own hands, by specifying keywords and target audiences.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dualgram.com&quot;&gt;Dualgram&lt;/a&gt; is an iOS-13-only app, and the multicam feature is available only to &lt;strong&gt;iPhone XR or better&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Apple Search Ads disappoints me, because I cannot select the device models.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/audience-targeting.jpg&quot; alt=&quot;&quot; class=&quot;border&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For my app, it is critical to select the exact iPhone models, if not this is what you see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/apple-ad-demo-display-2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Curious users will go ahead and tap to install, not knowing I am &lt;em&gt;paying for per tap&lt;/em&gt;, even if you cannot install..&lt;/p&gt;

&lt;h2 id=&quot;to-be-fair&quot;&gt;To be fair&lt;/h2&gt;

&lt;p&gt;Other ad networks ain‚Äôt better when it comes to device targeting.&lt;/p&gt;

&lt;p&gt;Facebook ‚Äúlatest model‚Äù is iPhone XS Max. Google ‚Äúlatest model‚Äù is iPhone X..&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Sep 2019 21:02:49 +0800</pubDate>
        <link>https://samwize.com/2019/09/26/apple-search-ads-can-be-very-dumb/</link>
        <guid isPermaLink="true">https://samwize.com/2019/09/26/apple-search-ads-can-be-very-dumb/</guid>
        
        
        <category>Apple Search Ads</category>
        
      </item>
    
      <item>
        <title>I'm Not Surprise With App Store Review Rejections Anymore</title>
        <description>&lt;p&gt;I was &lt;a href=&quot;https://blog.just2us.com/2019/09/17/we-made-an-app-to-record-front-and-back-cameras-simultaneously/&quot;&gt;developing a new iOS-13-only app&lt;/a&gt; and submitted it one week before Sep 19 ‚Äì the &lt;em&gt;D-day&lt;/em&gt; when iOS 13 is bestowed to all.&lt;/p&gt;

&lt;p&gt;The app was rejected. This time, over &lt;strong&gt;my app icon&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/dualgram-rejected-app-icon.png&quot; alt=&quot;Icon v1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;infringed-apple-intellectual-property&quot;&gt;Infringed Apple Intellectual Property&lt;/h2&gt;

&lt;p&gt;That‚Äôs what they said:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/dualgram-app-review-rejection-app-icon.jpg&quot; alt=&quot;&quot; class=&quot;border&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So, the problem is that my app icon &lt;strong&gt;looks too much like Apple iPhone camera lens&lt;/strong&gt;..&lt;/p&gt;

&lt;p&gt;I replied to ask &lt;em&gt;how is the camera lens trademarked?&lt;/em&gt; Of course they did not answer. Not that I am really expecting a reply.&lt;/p&gt;

&lt;p&gt;I was going to add that is actually &lt;a href=&quot;https://consumer.huawei.com/en/press/media-coverage/2018/what-you-need-to-know-about-the-worlds-first-triple-lens-smartphone/&quot;&gt;&lt;em&gt;Huawei‚Äôs camera lens&lt;/em&gt;&lt;/a&gt;, but I know better that arguing will not help. It will only delay my launch.&lt;/p&gt;

&lt;p&gt;My next submission was a flatter app icon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/dualgram-rejected-app-icon-2.png&quot; alt=&quot;Icon v2 - no more skeumo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was trying my luck. That‚Äôs what you got to do with app reviewer(s) - you just might get lucky.&lt;/p&gt;

&lt;p&gt;Icon v2 still failed. The reviewer replied exactly the same, quoting Guideline 5.2.5. That‚Äôs how reviewer insists you are still wrong.&lt;/p&gt;

&lt;p&gt;It always feel like we‚Äôre talking to a bot.&lt;/p&gt;

&lt;h2 id=&quot;success-on-the-3rd&quot;&gt;Success on the 3rd&lt;/h2&gt;

&lt;p&gt;I can‚Äôt delay longer, so I went for a complete drastic change, breaking the form.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/dualgram-rejected-app-icon-3.png&quot; alt=&quot;Icon v3 - Passed!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kind of like a &lt;em&gt;tao symbol&lt;/em&gt;. But yea, its &lt;a href=&quot;https://dualgram.com&quot;&gt;Dualgram&lt;/a&gt;, so why not.&lt;/p&gt;

&lt;h2 id=&quot;i-am-now-immune-to-rejections&quot;&gt;I am now immune to rejections&lt;/h2&gt;

&lt;p&gt;In the last 10 years, I have being rejected by app reviewers countless times. I will leave that to another future ranting post.&lt;/p&gt;

&lt;p&gt;The first few rejections were scary. A few OMG heart pumping moments.&lt;/p&gt;

&lt;p&gt;Now, I am no longer surprise with messages in Resolution Center. I can deal with them.&lt;/p&gt;

&lt;p&gt;But I am still pissed ü§¨&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Sep 2019 13:54:21 +0800</pubDate>
        <link>https://samwize.com/2019/09/20/i-am-no-longer-surprise-over-app-store-review-rejections/</link>
        <guid isPermaLink="true">https://samwize.com/2019/09/20/i-am-no-longer-surprise-over-app-store-review-rejections/</guid>
        
        
        <category>App Store</category>
        
        <category>Rejections</category>
        
      </item>
    
      <item>
        <title>Shortcuts &amp; GM Seed</title>
        <description>&lt;p&gt;I have kept a secret from my wife. I use some shortcuts when I text her, since 10 years ago.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/deleting-these-shortcuts.jpg&quot; alt=&quot;gm and gn&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But I am deleting the above 2 shortcuts today.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;Firstly, we are happily married for 5 years and we don‚Äôt text that kind of stuff anymore.&lt;/p&gt;

&lt;h2 id=&quot;secondly-because-of-xcode-gm&quot;&gt;Secondly, because of Xcode GM&lt;/h2&gt;

&lt;p&gt;When I type ‚ÄúXcode GM‚Äù, it expands to become &lt;strong&gt;Xcode Good Morning (:&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It is unintended. What‚Äôs more, GM is now more frequently used to refer to &lt;em&gt;Gold Master&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If you didn‚Äôt yet know.. Xcode GM is now at &lt;a href=&quot;https://developer.apple.com/app-store-connect/whats-new/?id=09162019a&quot;&gt;Seed 2&lt;/a&gt;, and for the first time in Xcode history, &lt;strong&gt;a GM is not a final version&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Maybe a Seed 3 would be coming..&lt;/p&gt;

&lt;p&gt;So get used to seeing more GMs.&lt;/p&gt;

&lt;p&gt;This is a random rant.&lt;/p&gt;

&lt;p&gt;If you are interested in some shortcuts, I have a few related posts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2019/05/31/mac-tips-using-finder-to-rename-multiple-files-etc/&quot;&gt;Mac tips to rename files quickly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2017/01/02/handy-bash-commands/&quot;&gt;Handy Bash Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2016/04/25/tutorial-on-creating-app-shortcut-with-3d-touch/&quot;&gt;Tutorial on Creating App Shortcut With 3D Touch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2016/01/25/xcode-shortcut-for-running-tests/&quot;&gt;Xcode Shortcut for Running Tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/2012/09/26/xcode-4-dot-5-tips-and-tricks/&quot;&gt;Xcode 4.5 Tips &amp;amp; Tricks (2012)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 17 Sep 2019 17:43:15 +0800</pubDate>
        <link>https://samwize.com/2019/09/17/shortcuts-and-xcode-gm/</link>
        <guid isPermaLink="true">https://samwize.com/2019/09/17/shortcuts-and-xcode-gm/</guid>
        
        
        <category>tips</category>
        
      </item>
    
      <item>
        <title>How to Rotate Only Selected Views (like Camera app)</title>
        <description>&lt;p&gt;Camera app has an interesting behavior ‚Äì When you rotate from portrait to landscape, only some buttons will rotate, while the camera preview layer and texts do not.&lt;/p&gt;

&lt;p&gt;This post is a guide on creating such UI behavior.&lt;/p&gt;

&lt;h2 id=&quot;1-lock-to-only-portrait-orientation&quot;&gt;1. Lock to only Portrait Orientation&lt;/h2&gt;

&lt;p&gt;In your &lt;code class=&quot;highlighter-rouge&quot;&gt;Info.plist&lt;/code&gt;, edit &lt;code class=&quot;highlighter-rouge&quot;&gt;UISupportedInterfaceOrientations&lt;/code&gt; to have only &lt;code class=&quot;highlighter-rouge&quot;&gt;UIInterfaceOrientationPortrait&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We don‚Äôt want the other orientations, because we will manually handle them.&lt;/p&gt;

&lt;h2 id=&quot;2-observe-orientationdidchangenotification&quot;&gt;2. Observe &lt;code class=&quot;highlighter-rouge&quot;&gt;orientationDidChangeNotification&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;In your view controller, observe for the event when device orientation change.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;UIDevice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;beginGeneratingDeviceOrientationNotifications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;NotificationCenter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addObserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#selector(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deviceOrientationDidChange&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIDevice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientationDidChangeNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-handle-the-rotation-event&quot;&gt;3. Handle the rotation event&lt;/h2&gt;

&lt;p&gt;This is where the magic happens. A very simple magic, by setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt; property of each view.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;@objc&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deviceOrientationDidChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;viewsToRotate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labelXX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewXX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;rotation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIDevice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotationTransform&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;viewsToRotate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forEach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rotationTransform&lt;/code&gt; is a &lt;code class=&quot;highlighter-rouge&quot;&gt;UIDeviceOrientation&lt;/code&gt; extension that provide us the &lt;strong&gt;required rotation&lt;/strong&gt; according to the device orientation, as follows:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIDeviceOrientation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;rotationTransform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGAffineTransform&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;landscapeLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGAffineTransform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rotationAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;landscapeRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGAffineTransform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rotationAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;portraitUpsideDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGAffineTransform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rotationAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course, to polish with an animation, you can wrap with &lt;code class=&quot;highlighter-rouge&quot;&gt;UIView.animate()&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Aug 2019 17:43:46 +0800</pubDate>
        <link>https://samwize.com/2019/08/06/how-to-rotate-selected-views-like-camera-app/</link>
        <guid isPermaLink="true">https://samwize.com/2019/08/06/how-to-rotate-selected-views-like-camera-app/</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Setup SceneDelegate Without Storyboard</title>
        <description>&lt;p&gt;New in iOS 13, multi-windows app requires &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uiwindowscenedelegate&quot;&gt;UIWindowSceneDelegate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This post is an update to an &lt;a href=&quot;/2018/04/04/setup-appdelegate-without-storyboard/&quot;&gt;earlier post for pre-iOS 13&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;1-remove-uiscenestoryboardfile&quot;&gt;1. Remove &lt;code class=&quot;highlighter-rouge&quot;&gt;UISceneStoryboardFile&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Scenes are defined in your app &lt;code class=&quot;highlighter-rouge&quot;&gt;Info.plist&lt;/code&gt;. There is a &lt;code class=&quot;highlighter-rouge&quot;&gt;UISceneStoryboardFile&lt;/code&gt; key with default ‚ÄúMain‚Äù storyboard. Remove that key-value pair.&lt;/p&gt;

&lt;p&gt;Your plist should look like this:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIApplicationSceneManifest&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIApplicationSupportsMultipleScenes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;false/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UISceneConfigurations&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIWindowSceneSessionRoleApplication&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UILaunchStoryboardName&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;LaunchScreen&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UISceneConfigurationName&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Default Configuration&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UISceneDelegateClassName&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;$(PRODUCT_MODULE_NAME).SceneDelegate&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-remove-uimainstoryboardfile&quot;&gt;2. Remove &lt;code class=&quot;highlighter-rouge&quot;&gt;UIMainStoryboardFile&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Also in &lt;code class=&quot;highlighter-rouge&quot;&gt;Info.plist&lt;/code&gt;, remove the storyboard key-value.&lt;/p&gt;

&lt;h2 id=&quot;3-setup-scenedelegate&quot;&gt;3. Setup &lt;code class=&quot;highlighter-rouge&quot;&gt;SceneDelegate&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Change the setup of the scene delegate to as such:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;willConnectTo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UISceneSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;connectionOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIScene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ConnectionOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;windowScene&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIWindowScene&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;windowScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootViewController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MyCustomViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;makeKeyAndVisible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The code creates your &lt;strong&gt;custom view controller programmatically&lt;/strong&gt;, then setting it to the root of the window for the scene (phew)!&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Aug 2019 13:56:17 +0800</pubDate>
        <link>https://samwize.com/2019/08/05/setup-scenedelegate-without-storyboard/</link>
        <guid isPermaLink="true">https://samwize.com/2019/08/05/setup-scenedelegate-without-storyboard/</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Catalina Beta Bug: Deleting Files Did Not Free Up Disk Space!</title>
        <description>&lt;p&gt;I was on macOS 10.15 Catalina BETA 1, and I encountered a very troubling bug.&lt;/p&gt;

&lt;p&gt;I know the risk of beta.. this post is to help others who are in the same situation.&lt;/p&gt;

&lt;h2 id=&quot;the-problem-disk-space-never-free-up&quot;&gt;The Problem: Disk Space Never Free Up&lt;/h2&gt;

&lt;p&gt;It turns out there is &lt;a href=&quot;https://forums.developer.apple.com/thread/117223&quot;&gt;a bug&lt;/a&gt; with Catalina together with Time Machine.&lt;/p&gt;

&lt;p&gt;Deletion (and emptying thrash) will not return you the disk space.&lt;/p&gt;

&lt;p&gt;I was very anxious because I was going to update to a new beta 3, and I thought the new beta should fix the problem. But, I don‚Äôt have enough disk space to install the new beta! It is a chicken and egg story?&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;

&lt;p&gt;Turns out, it is possible to free up the disk space despite the bug on Beta 1.&lt;/p&gt;

&lt;p&gt;You have to &lt;strong&gt;delete Time Machine local snapshot&lt;/strong&gt;. I will explain what they are in later section.&lt;/p&gt;

&lt;p&gt;Go to command line and list them.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tmutil listlocalsnapshots /Volumes/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My output looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;com.apple.TimeMachine.2019-07-02-204331
com.apple.TimeMachine.2019-07-03-085015
com.apple.TimeMachine.2019-07-03-103553
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Go on and delete a snapshot with the date.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tmutil deletelocalsnapshots 2019-07-02-204331
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will free up a lot of disk space! Do it for all if needed!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you have many snapshots from the list, you can delete all with &lt;code class=&quot;highlighter-rouge&quot;&gt;for d in $(tmutil listlocalsnapshotdates); do sudo tmutil deletelocalsnapshots $d; done&lt;/code&gt; (ignore the error because the first line is ‚ÄúSnapshot dates for all disks:‚Äù).&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-local-snapshot&quot;&gt;What is Local Snapshot?&lt;/h2&gt;

&lt;p&gt;There is one thing I learnt from this episode.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://support.apple.com/en-us/HT204015&quot;&gt;Local snapshots&lt;/a&gt; are created on your Mac (NOT on your backup disk), when the backup disk is unavailable.&lt;/p&gt;

&lt;p&gt;In some sense, you could even recover from these local snapshots when your backup disk is not around.&lt;/p&gt;

&lt;p&gt;However, they are kept at most 24 hours.&lt;/p&gt;

&lt;p&gt;This is a good trick when you need to free up some critical disk space.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To disable local snapshot, you can &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo tmutil disablelocal&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Jul 2019 20:19:00 +0800</pubDate>
        <link>https://samwize.com/2019/07/03/catalina-beta-bug-deleting-files-did-not-free-up-disk-space/</link>
        <guid isPermaLink="true">https://samwize.com/2019/07/03/catalina-beta-bug-deleting-files-did-not-free-up-disk-space/</guid>
        
        
        <category>macOS</category>
        
        <category>bug</category>
        
      </item>
    
      <item>
        <title>How to Generate PDF With Images</title>
        <description>&lt;p&gt;To create PDF, one of the most popular way is to create the HTML, then convert it to a PDF.&lt;/p&gt;

&lt;p&gt;This is in essence using &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UIMarkupTextPrintFormatter&lt;/code&gt;&lt;/a&gt;, one of the &lt;a href=&quot;https://developer.apple.com/documentation/uikit/printing&quot;&gt;provided formatters&lt;/a&gt; to generate PDF.&lt;/p&gt;

&lt;h2 id=&quot;pitfall-it-does-not-work-for-images&quot;&gt;Pitfall: It does NOT work for images&lt;/h2&gt;

&lt;p&gt;Unfortunately, &lt;code class=&quot;highlighter-rouge&quot;&gt;UIMarkupTextPrintFormatter&lt;/code&gt; can interpret all of HTML markups, but not the images.&lt;/p&gt;

&lt;p&gt;Numerous &lt;a href=&quot;https://stackoverflow.com/q/7058556/242682&quot;&gt;approaches&lt;/a&gt; yield no results, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;img&lt;/code&gt; tag with local file path&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;img&lt;/code&gt; with base64 encoding&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is in no fault to do with the HTML, since that can be displayed correctly in web views.&lt;/p&gt;

&lt;h2 id=&quot;solution-use-webkit&quot;&gt;Solution: Use WebKit&lt;/h2&gt;

&lt;p&gt;It turns out a possible solution is to use &lt;code class=&quot;highlighter-rouge&quot;&gt;WKWebView&lt;/code&gt; to load the html, then access it‚Äôs &lt;code class=&quot;highlighter-rouge&quot;&gt;viewPrintFormatter&lt;/code&gt; (&lt;a href=&quot;https://developer.apple.com/documentation/uikit/uiview/1621835-viewprintformatter&quot;&gt;a &lt;code class=&quot;highlighter-rouge&quot;&gt;UIView&lt;/code&gt; property&lt;/a&gt;), then generate the PDF.&lt;/p&gt;

&lt;p&gt;An extra step needs to be taken to wait for the web view to finish loading the HTML.&lt;/p&gt;

&lt;h3 id=&quot;step-1-load-the-web-view&quot;&gt;Step 1: Load the web view&lt;/h3&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;typealias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportManagerCompletion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;NSData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportManagerCompletion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;exportPDF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportCompletion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;webView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;navigationDelegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadHTMLString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;baseURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We created an &lt;code class=&quot;highlighter-rouge&quot;&gt;ExportManager&lt;/code&gt; here to make things clearer, largely it needs to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;hold an instance of the web view, though not displaying it&lt;/li&gt;
  &lt;li&gt;provide a completion handler (&lt;code class=&quot;highlighter-rouge&quot;&gt;ExportManagerCompletion&lt;/code&gt;) to return the PDF data&lt;/li&gt;
  &lt;li&gt;be a delegate to the web view&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-2-handle-when-finish-loading&quot;&gt;Step 2. Handle when finish loading&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ExportManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKNavigationDelegate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;didFinish&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;navigation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKNavigation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;viewPrintFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;nf&quot;&gt;createPDF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Our class extend &lt;code class=&quot;highlighter-rouge&quot;&gt;WKNavigationDelegate&lt;/code&gt; to handle when the HTML has finished loading.&lt;/p&gt;

&lt;p&gt;We access the web view‚Äôs &lt;code class=&quot;highlighter-rouge&quot;&gt;viewPrintFormatter&lt;/code&gt;, which works correctly with images!&lt;/p&gt;

&lt;h2 id=&quot;step-3-render-the-pdf&quot;&gt;Step 3. Render the PDF&lt;/h2&gt;

&lt;p&gt;Finally, we can render the PDF with a working formatter.&lt;/p&gt;

&lt;p&gt;The manager class will use &lt;code class=&quot;highlighter-rouge&quot;&gt;UIPrintPageRenderer&lt;/code&gt; to render the PDF and then call the completion handler successfully.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createPDF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewPrintFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIPrintPageRenderer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addPrintFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;startingAtPageAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Assign paperRect and printableRect&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// A4, 72 dpi&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;paperRect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;595.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;841.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paperRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;paperRect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;printableRect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paperRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;insetBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;printableRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;printableRect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 4. Create PDF context and draw&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pdfData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSMutableData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;UIGraphicsBeginPDFContextToData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdfData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numberOfPages&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;UIGraphicsBeginPDFPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;drawPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIGraphicsGetPDFContextBounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;UIGraphicsEndPDFContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdfData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;extra-html-and-base64-encode-the-image&quot;&gt;Extra: HTML and Base64 encode the image&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, you can encode an image with base64, and then include it in the HTML. The &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag can be generated like this.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;imageBase64Tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;jpegData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpeg&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;base64EncodedString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpegData&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;base64EncodedString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;data:image/jpeg;base64,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base64EncodedString&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;img src=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 02 Jul 2019 14:22:51 +0800</pubDate>
        <link>https://samwize.com/2019/07/02/how-to-generate-pdf-with-images/</link>
        <guid isPermaLink="true">https://samwize.com/2019/07/02/how-to-generate-pdf-with-images/</guid>
        
        
        <category>Swift</category>
        
      </item>
    
      <item>
        <title>Using URLSession for simple HTTP GET &amp; POST</title>
        <description>&lt;p&gt;Since &lt;code class=&quot;highlighter-rouge&quot;&gt;URLSession&lt;/code&gt; was introduced in iOS 7, &lt;a href=&quot;/2014/05/10/tutorial-on-using-afnetworking-2-dot-0/&quot;&gt;third party libraries&lt;/a&gt; have somehow lesser value.&lt;/p&gt;

&lt;p&gt;This post is a quick guide with snippets to some common use cases when working with HTTP APIs using the first party Foundation framework.&lt;/p&gt;

&lt;h2 id=&quot;http-get&quot;&gt;HTTP GET&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://samwize.com/api/hero&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dataTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just that few lines of code to fetch from a URL.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;dataTask()&lt;/code&gt; method is a HTTP GET request.&lt;/p&gt;

&lt;h2 id=&quot;http-post&quot;&gt;HTTP POST&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://samwize.com/api/hero&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id=1234&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;using&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uploadTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;uploadTask()&lt;/code&gt; method is for a POST request. Or you may change the &lt;code class=&quot;highlighter-rouge&quot;&gt;httpMethod&lt;/code&gt; to UPDATE etc.&lt;/p&gt;

&lt;h2 id=&quot;post-with-query-string&quot;&gt;POST with query string&lt;/h2&gt;

&lt;p&gt;The POST request above is a simple example, with a payload that doesn‚Äôt require any percent encoding. But it is more likely that you have longer query items.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;URLQueryItem&lt;/code&gt; (also Foundation framework) provides a basic struct for constructing key-value pairs.&lt;/p&gt;

&lt;p&gt;Together with &lt;code class=&quot;highlighter-rouge&quot;&gt;URLComponents&lt;/code&gt;, you can add as many key-value pairs to a &lt;code class=&quot;highlighter-rouge&quot;&gt;URLComponents&lt;/code&gt;, then access the &lt;code class=&quot;highlighter-rouge&quot;&gt;percentEncodedQuery&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;urlComponents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLComponents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;q1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLQueryItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;with space that needs encoding&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;urlComponents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlComponents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;percentEncodedQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;using&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;codable-model&quot;&gt;Codable Model&lt;/h2&gt;

&lt;p&gt;New in Swift 4, JSON can be decoded to a &lt;code class=&quot;highlighter-rouge&quot;&gt;struct&lt;/code&gt; easily,&lt;/p&gt;

&lt;p&gt;I have a separate guide to &lt;a href=&quot;/2017/09/26/guide-to-using-codable-struct-for-json-the-new-thing-in-swift-4/&quot;&gt;Codable struct&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let‚Äôs say in the POST API, a &lt;code class=&quot;highlighter-rouge&quot;&gt;Hero&lt;/code&gt; object in JSON is returned, we could decode it easily.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uploadTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;decoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSONDecoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;hero&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try!&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Hero&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Similarly, you can encode a model, then POST the JSON string/data as a payload.&lt;/p&gt;

&lt;h2 id=&quot;other-resources&quot;&gt;Other Resources&lt;/h2&gt;

&lt;p&gt;Apple‚Äôs official guide on &lt;a href=&quot;https://developer.apple.com/documentation/foundation/url_loading_system&quot;&gt;URL Loading System&lt;/a&gt; and &lt;a href=&quot;https://developer.apple.com/documentation/foundation/url_loading_system/fetching_website_data_into_memory&quot;&gt;how to fetch data&lt;/a&gt; is their guide to the networking framework. You could use &lt;code class=&quot;highlighter-rouge&quot;&gt;URLSessionConfiguration&lt;/code&gt; to configure your own session, and also use &lt;code class=&quot;highlighter-rouge&quot;&gt;URLSessionDelegate&lt;/code&gt; for a delegate pattern to receive the data.&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Jun 2019 18:25:00 +0800</pubDate>
        <link>https://samwize.com/2019/06/21/simple-guide-to-urlsession-http-get-post-requests/</link>
        <guid isPermaLink="true">https://samwize.com/2019/06/21/simple-guide-to-urlsession-http-get-post-requests/</guid>
        
        
        <category>Foundation</category>
        
      </item>
    
      <item>
        <title>How to Enable Sidecar for the Unsupported Macbooks</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.macrumors.com/2019/06/06/macos-catalina-sidecar-limited-to-newer-macs/&quot;&gt;macOS 10.15 Catalina&lt;/a&gt; (still beta) now supports running a secondary display using an iPad!&lt;/p&gt;

&lt;p&gt;I was disappointed to realize that it does not support for my old &lt;strong&gt;MacBook early 2015&lt;/strong&gt;. I was running an iPad Mini (5th generation 2019), but I know the problem should be due to the MacBook which is driving the display.&lt;/p&gt;

&lt;p&gt;But I got it working!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/sidecar-with-macbook-2015.jpg&quot; alt=&quot;My 2015 MacBook + iPad Mini&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;It turned out that Sidecar is being hidden for some older hardware, and with some simple overriding of the defaults, we can make it show.&lt;/p&gt;

&lt;p&gt;Open your iTerm/Terminal and give these commands:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.sidecar.display hasShownPref &lt;span class=&quot;nt&quot;&gt;-bool&lt;/span&gt; YES
defaults write com.apple.sidecar.display allowAllDevices &lt;span class=&quot;nt&quot;&gt;-bool&lt;/span&gt; YES
open /System/Library/PreferencePanes/Sidecar.prefPane
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;error-on-my-first-attempt&quot;&gt;Error on my first attempt&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/sidecar-pref-error.jpg&quot; alt=&quot;Error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On my first attempt, it throws me that error. But perhaps due to a reboot, the Sidecar shows up mysteriously the next day. So don‚Äôt panic if it didn‚Äôt work at first.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Jun 2019 15:09:30 +0800</pubDate>
        <link>https://samwize.com/2019/06/09/how-to-enable-sidecar-even-for-the-unsupported-macbooks/</link>
        <guid isPermaLink="true">https://samwize.com/2019/06/09/how-to-enable-sidecar-even-for-the-unsupported-macbooks/</guid>
        
        
        <category>Mac</category>
        
      </item>
    
  </channel>
</rss>
