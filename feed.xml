<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>@samwize</title>
    <description>¬Ø\_(„ÉÑ)_/¬Ø
</description>
    <link>https://samwize.com/</link>
    <atom:link href="https://samwize.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 09 Jun 2019 15:38:05 +0800</pubDate>
    <lastBuildDate>Sun, 09 Jun 2019 15:38:05 +0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>How to Enable Sidecar for the Unsupported Macbooks</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.macrumors.com/2019/06/06/macos-catalina-sidecar-limited-to-newer-macs/&quot;&gt;macOS 10.15 Catalina&lt;/a&gt; (still beta) now supports running a secondary display using an iPad!&lt;/p&gt;

&lt;p&gt;I was disappointed to realize that it does not support for my old &lt;strong&gt;MacBook early 2015&lt;/strong&gt;. I was running an iPad Mini (5th generation 2019), but I know the problem should be due to the MacBook which is driving the display.&lt;/p&gt;

&lt;p&gt;But I got it working!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/sidecar-with-macbook-2015.jpg&quot; alt=&quot;My 2015 MacBook + iPad Mini&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;It turned out that Sidecar is being hidden for some older hardware, and with some simple overriding of the defaults, we can make it show.&lt;/p&gt;

&lt;p&gt;Open your iTerm/Terminal and give these commands:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.sidecar.display hasShownPref &lt;span class=&quot;nt&quot;&gt;-bool&lt;/span&gt; YES
defaults write com.apple.sidecar.display allowAllDevices &lt;span class=&quot;nt&quot;&gt;-bool&lt;/span&gt; YES
open /System/Library/PreferencePanes/Sidecar.prefPane
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;error-on-my-first-attempt&quot;&gt;Error on my first attempt&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/sidecar-pref-error.jpg&quot; alt=&quot;Error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On my first attempt, it throws me that error. But perhaps due to a reboot, the Sidecar shows up mysteriously the next day. So don‚Äôt panic if it didn‚Äôt work at first.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Jun 2019 15:09:30 +0800</pubDate>
        <link>https://samwize.com/2019/06/09/how-to-enable-sidecar-even-for-the-unsupported-macbooks/</link>
        <guid isPermaLink="true">https://samwize.com/2019/06/09/how-to-enable-sidecar-even-for-the-unsupported-macbooks/</guid>
        
        
        <category>Mac</category>
        
      </item>
    
      <item>
        <title>Mac Tips: Using Finder to Rename Multiple Files, Etc</title>
        <description>&lt;p&gt;I often need to rename multiple files eg. screenshots generated from UI Testing, or my personal photos. I often need to resize images eg. for screenshots on my blogs.&lt;/p&gt;

&lt;p&gt;To do that easily, I often use my &lt;a href=&quot;/2017/01/02/handy-bash-commands/&quot;&gt;handy bash commands&lt;/a&gt;. They are great, and I do have lots of control.&lt;/p&gt;

&lt;p&gt;But macOS Mojave has features covering some of my very common workflow, which I didn‚Äôt know till now.&lt;/p&gt;

&lt;h2 id=&quot;rename-multiple-files-with-finder&quot;&gt;Rename Multiple Files with Finder&lt;/h2&gt;

&lt;p&gt;Select multiple files &amp;gt; right click to bring up the menu &amp;gt; &lt;strong&gt;Rename XX items&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And the renaming is powerful. There are 3 modes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Replace Text&lt;/li&gt;
  &lt;li&gt;Add Text&lt;/li&gt;
  &lt;li&gt;Format&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/finder-rename-files.jpg&quot; alt=&quot;Finder Rename Panel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The (3) Format is a nice one that prefix/suffix a running index, or date, to a name. That is very helpful especially for my photo management! I just wish the format can accept my own regex üòÅ&lt;/p&gt;

&lt;h2 id=&quot;resize-image-save-as-jpeg&quot;&gt;Resize Image, Save as JPEG&lt;/h2&gt;

&lt;p&gt;When I write my blogs, it is often that I take screenshots (in PNG), and then I need to resize them to 600x600, and then convert to JPEG format.&lt;/p&gt;

&lt;p&gt;In the past, I use &lt;a href=&quot;/2017/01/02/handy-bash-commands/&quot;&gt;magick command&lt;/a&gt;, but there is a faster way using &lt;strong&gt;Quick Action&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I can highlight multiple files &amp;gt; right click &amp;gt; Services &amp;gt; Jpeg-600 (a custom Quick Action)!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/quick-action-menu.jpg&quot; alt=&quot;Services Menu&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To create the custom Quick Action, you can open Automator.app and create it. The workflow looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/automator-quick-action.jpg&quot; alt=&quot;Quick Action&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Further more, I have a Jpeg-1200 and Jpeg-800, and I create Keyboard shortcuts for them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/keyboard-shortcuts-services.jpg&quot; alt=&quot;Keyboard Shortcuts&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 31 May 2019 09:46:03 +0800</pubDate>
        <link>https://samwize.com/2019/05/31/mac-tips-using-finder-to-rename-multiple-files-etc/</link>
        <guid isPermaLink="true">https://samwize.com/2019/05/31/mac-tips-using-finder-to-rename-multiple-files-etc/</guid>
        
        
        <category>Mac</category>
        
      </item>
    
      <item>
        <title>How to Animate Auto Layout Constraints (2019)</title>
        <description>&lt;p&gt;I have a &lt;a href=&quot;/2014/07/10/autolayout-constraints-animation/&quot;&gt;2014 post in Objective-C&lt;/a&gt;, and quite a bit has changed since then. We now have &lt;strong&gt;Swift 5&lt;/strong&gt;, and &lt;strong&gt;layout anchors&lt;/strong&gt; (a short introduction below).&lt;/p&gt;

&lt;p&gt;A comprehensive tutorial comes from &lt;a href=&quot;https://theswiftdev.com/2018/06/14/mastering-ios-auto-layout-anchors-programmatically-from-swift/&quot;&gt;theswiftdev&lt;/a&gt;, ranging from where to create the constraints, including how to animate them.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;However, I find his code on animating constraints differ slightly from my style.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-i-animate-constraints&quot;&gt;How I animate constraints&lt;/h2&gt;

&lt;p&gt;Similar to how I do it in &lt;a href=&quot;/2014/07/10/autolayout-constraints-animation/&quot;&gt;2014&lt;/a&gt;, I change the constraints &lt;strong&gt;within&lt;/strong&gt; the animation block.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;withDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Make all constraint changes here&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// For example:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;someViewConstraint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;layoutIfNeeded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://gitlab.com/theswiftdev/uikit/snippets/1741461&quot;&gt;theswiftdev‚Äôs gist&lt;/a&gt; does it &lt;strong&gt;before&lt;/strong&gt; the animation block. It also works, but that is simply due to the way layout engine process the changes.&lt;/p&gt;

&lt;p&gt;There are times you might even have to call &lt;code class=&quot;highlighter-rouge&quot;&gt;view.layoutIfNeeded()&lt;/code&gt; before the animation, to make sure the animation starts at the right place.&lt;/p&gt;

&lt;p&gt;Changing your final constraints within the animation block will ensure that is the final state.&lt;/p&gt;

&lt;h2 id=&quot;layout-anchor&quot;&gt;Layout Anchor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/uikit/nslayoutanchor&quot;&gt;Layout anchor&lt;/a&gt; was introduced in iOS 9, making the APIs for auto layout much nicer (to code with).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The NSLayoutAnchor class is a factory class for creating NSLayoutConstraint objects using a fluent API. Use these constraints to programatically define your layout using Auto Layout.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A simple example of setting up a &lt;code class=&quot;highlighter-rouge&quot;&gt;subview&lt;/code&gt; to have the same &lt;em&gt;safe&lt;/em&gt; edges as it‚Äôs superview:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leftAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeAreaLayoutGuide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leftAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rightAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeAreaLayoutGuide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rightAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeAreaLayoutGuide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottomAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safeAreaLayoutGuide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottomAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is much shorter than init-ing each &lt;code class=&quot;highlighter-rouge&quot;&gt;NSLayoutConstraint&lt;/code&gt; with 7 parameters. Oh, and always better than &lt;a href=&quot;/2014/05/13/first-taste-with-visual-language-format/&quot;&gt;Visual Language Format&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NSLayoutConstraint.activate&lt;/code&gt; is the magic method to activate all those constraints.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NSLayoutConstraint.deactivate&lt;/code&gt; is removing the constraints, and will be useful in animation.&lt;/p&gt;
</description>
        <pubDate>Wed, 15 May 2019 15:15:41 +0800</pubDate>
        <link>https://samwize.com/2019/05/15/how-to-animate-auto-layout-constraints-2019/</link>
        <guid isPermaLink="true">https://samwize.com/2019/05/15/how-to-animate-auto-layout-constraints-2019/</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Try the New Brave Browser with Built-in Ad Blocker</title>
        <description>&lt;p&gt;I have been using this &lt;a href=&quot;https://brave.com/sam690&quot;&gt;new web browser&lt;/a&gt; and would love to share it with you.&lt;/p&gt;

&lt;h2 id=&quot;what-is-so-great-about-brave&quot;&gt;What is so great about Brave?&lt;/h2&gt;

&lt;p&gt;The unique features of &lt;a href=&quot;https://brave.com/sam690&quot;&gt;Brave&lt;/a&gt; are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Block ads and trackers&lt;/li&gt;
  &lt;li&gt;Faster than Chrome/Safari&lt;/li&gt;
  &lt;li&gt;Earn cryptocurrency while you surf the Internet&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I have been using it for months and I vouch the web browser is indeed awesome.&lt;/p&gt;

&lt;p&gt;Youtube without ads ü§†&lt;/p&gt;

&lt;p&gt;Reading articles without inserted banners ü§ì&lt;/p&gt;

&lt;p&gt;No more irritating pop-up ad windows ü§ó&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brave.com/sam690&quot;&gt;&lt;img src=&quot;/images/brave-browser-stats.png&quot; alt=&quot;Saving me 1.3 hours in 2 months&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;hey-but-this-website-has-advertisements-too&quot;&gt;Hey, but this website has advertisements too!&lt;/h2&gt;

&lt;p&gt;Yup, I put Google Ads in all my websites. I am no saint.&lt;/p&gt;

&lt;p&gt;But it is fair that creators get rewarded.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/website-with-ads.jpg&quot; alt=&quot;I know, ads are irritating&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Anyway, samwize.com generates US$15/mth, enough to pay a few coffee, to keep me writing in the night.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, I am okay if you use Brave, and block my ads.&lt;/p&gt;

&lt;p&gt;Because when you visit my website with Brave, I get paid with their BAT cryptocurrency instead!&lt;/p&gt;

&lt;p&gt;This is a new business model.&lt;/p&gt;

&lt;p&gt;No ads for consumers, while creators get rewarded.&lt;/p&gt;

&lt;h2 id=&quot;how-much-did-i-earn-from-brave&quot;&gt;How much did I earn from Brave?&lt;/h2&gt;

&lt;p&gt;Not much right now, since there are not many people using Brave browser. I hope to share some encouraging numbers in the future :)&lt;/p&gt;

&lt;p&gt;Firstly, more people have to use the browser.&lt;/p&gt;

&lt;p&gt;So please download now, with my &lt;a href=&quot;https://brave.com/sam690&quot;&gt;referral link&lt;/a&gt;, and I help me earn $5 (worth of BAT)!&lt;/p&gt;
</description>
        <pubDate>Thu, 09 May 2019 16:42:28 +0800</pubDate>
        <link>https://samwize.com/2019/05/09/try-brave-browser-with-built-in-ad-block/</link>
        <guid isPermaLink="true">https://samwize.com/2019/05/09/try-brave-browser-with-built-in-ad-block/</guid>
        
        
        <category>Apps</category>
        
      </item>
    
      <item>
        <title>How to Renew Cert for Fastlane Match</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/match/&quot;&gt;Fastlane match&lt;/a&gt; is a great tool, except that they are super slow in fixing and improving, coincidentally &lt;a href=&quot;https://krausefx.com/blog/ending-my-fastlane-chapter&quot;&gt;after the founder left&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am pretty sadden that their solution to ‚Äúfixing‚Äù every issue is:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/fastlane-bot-fix.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem-expired-certificates&quot;&gt;Problem: Expired Certificates&lt;/h2&gt;

&lt;p&gt;A certificate last for 1 year.&lt;/p&gt;

&lt;p&gt;When it expires, fastlane match does not auto-renew, and simply throw an error.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[!] Your certificate ‚Äò54V6LXXXXX.cer‚Äô is not valid, please check end date and renew it if necessary&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This issue was &lt;a href=&quot;https://github.com/fastlane/fastlane/issues/11663&quot;&gt;raised&lt;/a&gt; more than a year ago, and then closed by the bot, without a fix.&lt;/p&gt;

&lt;p&gt;Dang.&lt;/p&gt;

&lt;h2 id=&quot;solution-1-nuke&quot;&gt;Solution 1: nuke&lt;/h2&gt;

&lt;p&gt;You can use their &lt;code class=&quot;highlighter-rouge&quot;&gt;nuke&lt;/code&gt; to &lt;strong&gt;revoke your certificates and provisioning profiles&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane match nuke development
fastlane match nuke distribution
fastlane match nuke enterprise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nuke&lt;/code&gt; will delete all. You cannot choose a particular cert or application identifier to kill.&lt;/p&gt;

&lt;p&gt;Like a nuclear bomb, it is pretty destructive.&lt;/p&gt;

&lt;h2 id=&quot;solution-2-remove-the-certs-in-repo&quot;&gt;Solution 2: Remove the certs in repo&lt;/h2&gt;

&lt;p&gt;There is another solution that is manual, but you can be selective.&lt;/p&gt;

&lt;p&gt;For example, I can renew my development certificate (keeping the distribution), or remove only certain provisioning profiles, or affect only a certain application.&lt;/p&gt;

&lt;p&gt;To do so, simply removing the files in the repository accordingly.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/certs/development/54V6LXXXXX.p12/cer&lt;/li&gt;
  &lt;li&gt;/profiles/development/whichever.mobileprovision&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then do &lt;strong&gt;git commit and push&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You should also go to Apple Developer portal and delete the provisioning profiles, otherwise you will end up with profile names with random digits as suffix (fastlane added to avoid name collision).&lt;/p&gt;

&lt;p&gt;When you run &lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane match&lt;/code&gt; again, it will re-create new cert and profiles.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 May 2019 14:31:00 +0800</pubDate>
        <link>https://samwize.com/2019/05/02/how-to-renew-cert-for-fastlane-match/</link>
        <guid isPermaLink="true">https://samwize.com/2019/05/02/how-to-renew-cert-for-fastlane-match/</guid>
        
        
        <category>fastlane</category>
        
      </item>
    
      <item>
        <title>Spotlight Indexing for Your App Content</title>
        <description>&lt;p&gt;If your app has any data or content, you will probably want to implement spotlight indexing, so that users can conveniently search in spotlight.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://developer.apple.com/library/archive/documentation/General/Conceptual/AppSearch/Art/numbers_2x.png&quot; alt=&quot;A searched item&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-create-the-searchable-items&quot;&gt;1. Create the searchable items&lt;/h2&gt;

&lt;p&gt;Let‚Äôs start with creating &lt;code class=&quot;highlighter-rouge&quot;&gt;CSSearchableItem&lt;/code&gt; for a model in the app. We use the model &lt;code class=&quot;highlighter-rouge&quot;&gt;station&lt;/code&gt; as an example.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CoreSpotlight&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MobileCoreServices&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createSearchableItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Station&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CSSearchableItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attributeSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CSSearchableItemAttributeSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;itemContentType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kUTTypeData&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contentDescription&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thumbnailData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pngData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CSSearchableItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;uniqueIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;station&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;domainIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;station&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attributeSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above is the minimal data that you are recommended to provide. You could provide more &lt;a href=&quot;https://developer.apple.com/documentation/corespotlight/cssearchableitemattributeset&quot;&gt;metadata&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;2-index-them-all&quot;&gt;2. Index them all&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;indexAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;stations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createSearchableItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;CSSearchableIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;indexSearchableItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;logError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localizedDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;CSSearchableIndex&lt;/code&gt;, you add your items to the index. Do a search, and you should see in spotlight results.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PITFALL: Simulator might not work, so try on a real device.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-handle-when-tap-on-an-item&quot;&gt;3. Handle when tap on an item&lt;/h2&gt;

&lt;p&gt;In your app delegate, implement &lt;code class=&quot;highlighter-rouge&quot;&gt;application:continueUserActivity:restorationHandler:&lt;/code&gt;, the user activity handoff method.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSUserActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;restorationHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UIUserActivityRestoring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]?)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activityType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CSSearchableItemActionType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;identifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;CSSearchableItemActivityIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Handle it. Navigate to a certain screen, or perform certain action.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The same app delegate method is &lt;a href=&quot;https://samwize.com/2017/11/10/guide-to-universal-links/&quot;&gt;used for universal link&lt;/a&gt; too.&lt;/p&gt;

&lt;h2 id=&quot;4-maintain-the-index&quot;&gt;4. Maintain the index&lt;/h2&gt;

&lt;p&gt;To update an item, use &lt;code class=&quot;highlighter-rouge&quot;&gt;indexSearchableItems()&lt;/code&gt; with the same &lt;code class=&quot;highlighter-rouge&quot;&gt;uniqueIdentifier&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To delete, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;deleteSearchableItemsWithIdentifiers&lt;/code&gt; and &lt;a href=&quot;https://developer.apple.com/documentation/corespotlight/cssearchableindex&quot;&gt;other methods&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Apr 2019 15:49:43 +0800</pubDate>
        <link>https://samwize.com/2019/04/26/spotlight-indexing-for-your-app-content/</link>
        <guid isPermaLink="true">https://samwize.com/2019/04/26/spotlight-indexing-for-your-app-content/</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Binding With Array Controller</title>
        <description>&lt;p&gt;In my &lt;a href=&quot;/2018/12/06/guide-to-binding-nstableview-to-nsfetchedresultscontroller/&quot;&gt;first guide to binding&lt;/a&gt;, it uses &lt;code class=&quot;highlighter-rouge&quot;&gt;NSFetchedResultsController&lt;/code&gt;, which is tightly coupled to the Core Data framework.&lt;/p&gt;

&lt;p&gt;It is not necessary (of course) to bind to Core Data models.&lt;/p&gt;

&lt;p&gt;This guide will be more generic, providing a guide to binding to a plain old object model.&lt;/p&gt;

&lt;h2 id=&quot;the-model&quot;&gt;The Model&lt;/h2&gt;

&lt;p&gt;Let‚Äôs use a simple model &lt;code class=&quot;highlighter-rouge&quot;&gt;MyData&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;@objc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Any member variable such as &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; has to be annotated with &lt;code class=&quot;highlighter-rouge&quot;&gt;@objc&lt;/code&gt;, because that‚Äôs how the old world works and provides.&lt;/p&gt;

&lt;h2 id=&quot;array-controller&quot;&gt;Array Controller&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NSArrayController&lt;/code&gt; manages the models.&lt;/p&gt;

&lt;p&gt;It does NOT hold the models, but simply manages it in terms of sorting, filtering, and CRUD operations.&lt;/p&gt;

&lt;p&gt;It is common to add the &lt;code class=&quot;highlighter-rouge&quot;&gt;NSArrayController&lt;/code&gt; object in a storyboard. Then set up as such:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In Attributes Inspector:
    &lt;ul&gt;
      &lt;li&gt;Mode is class&lt;/li&gt;
      &lt;li&gt;Class name is &lt;code class=&quot;highlighter-rouge&quot;&gt;MyApp.MyData&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;The prefix &lt;code class=&quot;highlighter-rouge&quot;&gt;MyApp&lt;/code&gt; is necessary, and it is your target‚Äôs &lt;strong&gt;Product Module Name&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;In Binding Inspector &amp;gt; Controller Content:
    &lt;ul&gt;
      &lt;li&gt;Bind to your view controller (usually) eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;MyListViewController&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Model Key Path is &lt;code class=&quot;highlighter-rouge&quot;&gt;self.myDataList&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;view-controller&quot;&gt;View Controller&lt;/h2&gt;

&lt;p&gt;It is a good time now to show you what your view controller looks like.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-self&quot;&gt;class MyListViewController: NSViewController {
    @objc dynamic var myDataList = [MyData]()
    @objc dynamic var sorts = [NSSortDescriptor]()
    @objc dynamic var filter: NSPredicate?
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;myDataList&lt;/code&gt; is the actual models that the view controller holds. It must be prefix with &lt;code class=&quot;highlighter-rouge&quot;&gt;@objc&lt;/code&gt; once again.&lt;/p&gt;

&lt;p&gt;Remember: The &lt;code class=&quot;highlighter-rouge&quot;&gt;NSArrayController&lt;/code&gt; is managing these models. You don‚Äôt mutate the array controller directly.&lt;/p&gt;

&lt;p&gt;Whenever you want to update your model, mutate &lt;code class=&quot;highlighter-rouge&quot;&gt;myDataList&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;table-view&quot;&gt;Table View&lt;/h2&gt;

&lt;p&gt;Next, we bind the array controller to the table view.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In Attributes inspector, set &lt;strong&gt;Content Mode&lt;/strong&gt; to &lt;strong&gt;View Based&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In Bindings inspector, bind &lt;strong&gt;Content&lt;/strong&gt; to Array Controller. The Controller Key should already be &lt;code class=&quot;highlighter-rouge&quot;&gt;arrangedObjects&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Select the actual view to bind eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;NSTextField&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;NSDatePicker&lt;/code&gt; etc&lt;/li&gt;
  &lt;li&gt;In Bindings inspector, bind &lt;strong&gt;Value&lt;/strong&gt; to &lt;strong&gt;Table Cell View&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Set the &lt;strong&gt;Model Key Path&lt;/strong&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;objectValue.name&lt;/code&gt; (your model‚Äôs attribute!)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sort--filter&quot;&gt;Sort &amp;amp; Filter&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Select Array Controller&lt;/strong&gt; &amp;gt; Bindings inspector &amp;gt; Sort Descriptors &amp;gt; Bind to the view controller&lt;/li&gt;
  &lt;li&gt;Set Model Key Path to &lt;code class=&quot;highlighter-rouge&quot;&gt;self.sorts&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Similarly, for filter bind to &lt;code class=&quot;highlighter-rouge&quot;&gt;self.filter&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Init &lt;code class=&quot;highlighter-rouge&quot;&gt;sorts&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;viewDidLoad&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Mutate them, and the views will be updated immediately&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;sort-when-clicking-on-the-table-column-header&quot;&gt;Sort when clicking on the table column header&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Select Table View&lt;/strong&gt; &amp;gt; Bindings inspector &amp;gt; Sort Descriptors &amp;gt; Bind to the view controller&lt;/li&gt;
  &lt;li&gt;Set Model Key Path to &lt;code class=&quot;highlighter-rouge&quot;&gt;self.sorts&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Select a table column &amp;gt; Bindings inspector &amp;gt; Value &amp;gt; Bind to Array Controller&lt;/li&gt;
  &lt;li&gt;Set the model key path eg. ‚Äúname‚Äù&lt;/li&gt;
  &lt;li&gt;Make sure Creates Sort Descriptor is enabled&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;selection&quot;&gt;Selection&lt;/h2&gt;

&lt;p&gt;When you select rows in the table view, you should bind it to the array controller too.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Select Table View &amp;gt; Bindings inspector &amp;gt; Selection Indexes &amp;gt; Bind to the Array Controller&lt;/li&gt;
  &lt;li&gt;Set Controller Key to &lt;code class=&quot;highlighter-rouge&quot;&gt;selectionIndexes&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;delete-selected-rows&quot;&gt;Delete Selected Rows&lt;/h2&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;@IBAction&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deleteSelectedRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arrayController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;atArrangedObjectIndexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arrayController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectionIndexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I have omitted the obvious: Add a button with the action to the above function, adding the array controller outlet to the view controller.&lt;/p&gt;

&lt;h2 id=&quot;add-new-row&quot;&gt;Add New Row&lt;/h2&gt;

&lt;p&gt;Similarly, you can have a button to add new model(s).&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;@IBAction&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;newModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arrayController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 05 Apr 2019 11:43:10 +0800</pubDate>
        <link>https://samwize.com/2019/04/05/binding-with-array-controller/</link>
        <guid isPermaLink="true">https://samwize.com/2019/04/05/binding-with-array-controller/</guid>
        
        
        <category>macOS</category>
        
      </item>
    
      <item>
        <title>Integrate Swift Package Manager for iOS &amp; macOS Projects</title>
        <description>&lt;p&gt;Swift Package Manager (SPM) &lt;a href=&quot;https://github.com/apple/swift-package-manager/blob/master/Documentation/Usage.md#depending-on-apple-modules&quot;&gt;does not support iOS and macOS&lt;/a&gt;. Sadly, it has been a few years and they are still not on the same level as CocoaPods.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What then is SPM good for?&lt;/em&gt; It is good for developing executable CLI or packing your library.. not sexy for the modern app developer.&lt;/p&gt;

&lt;h2 id=&quot;but-it-should-work&quot;&gt;But it should work&lt;/h2&gt;

&lt;p&gt;SPM is nothing but resolving the dependencies, downloading them as needed.&lt;/p&gt;

&lt;p&gt;Hence, it should work even if we drag and drop the frameworks into a project.&lt;/p&gt;

&lt;p&gt;I will describe how I do so with my specific scenario: using &lt;a href=&quot;https://github.com/OpenKitten/MongoKitten&quot;&gt;MongoKitten&lt;/a&gt; for my macOS app.&lt;/p&gt;

&lt;p&gt;The same steps will apply for any libraries, and for iOS (or even tvOS, watchOS too).&lt;/p&gt;

&lt;h2 id=&quot;why-did-i-not-use-cocoapods-&quot;&gt;Why did I not use CocoaPods ?&lt;/h2&gt;

&lt;p&gt;Because, MongoKitten podspec did not support macOS, for some reason. But it will work since the library does not use any specific iOS frameworks.&lt;/p&gt;

&lt;p&gt;If CocoaPods works for you, please do not use CPM.&lt;/p&gt;

&lt;h2 id=&quot;the-steps&quot;&gt;The steps&lt;/h2&gt;

&lt;p&gt;Before I describe the steps, read &lt;a href=&quot;/2016/11/14/swift-package-manager-development-guide/&quot;&gt;here&lt;/a&gt; for a basic guide on using &lt;code class=&quot;highlighter-rouge&quot;&gt;swift package&lt;/code&gt; commands.&lt;/p&gt;

&lt;h3 id=&quot;1-create-the-dependencies&quot;&gt;1. Create The Dependencies&lt;/h3&gt;

&lt;p&gt;We will setup the dependencies that will be resolved by SPM in your app root directory.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# In the root folder of eg. MyApp.xcodeproj
mkdir Dependencies
cd Dependencies
swift package init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Edit &lt;code class=&quot;highlighter-rouge&quot;&gt;Package.swift&lt;/code&gt; for the actual libraries you need (eg. MongoKitten):&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// swift-tools-version:4.2&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PackageDescription&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;products&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;targets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Dependencies declare other packages that this package depends on.&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://github.com/OpenKitten/MongoKitten.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4.1.3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;targets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MongoKitten&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;testTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;DependenciesTests&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now build them:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;swift build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-generate-xcodeproj&quot;&gt;2. Generate xcodeproj&lt;/h3&gt;

&lt;p&gt;Simply run the command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;swift package generate-xcodeproj
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I have seen on &lt;a href=&quot;https://stackoverflow.com/a/54701806/242682&quot;&gt;stackoverflow&lt;/a&gt; that declared custom xcconfig, then generate with&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;swift package generate-xcodeproj --xcconfig-overrides macos.xcconfig&lt;/code&gt;. I did not need it, but it‚Äôs there if things didn‚Äôt work on your first try.&lt;/p&gt;

&lt;h3 id=&quot;3-add-dependenciesxcodeproj-to-your-app&quot;&gt;3. Add Dependencies.xcodeproj to Your App&lt;/h3&gt;

&lt;p&gt;Now, open &lt;strong&gt;your app‚Äôs&lt;/strong&gt; Xcode project/workspace.&lt;/p&gt;

&lt;p&gt;Drag and drop the generated Dependencies.xcodeproj to the Project Navigator.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/spm-dependencies.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, go to your app target &amp;gt; Linked Frameworks and Libraries &amp;gt; Add Dependencies.framework&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/spm-dependencies-linked.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will ensure the Dependencies (the libraries) will be build first before the app.&lt;/p&gt;

&lt;p&gt;With that, you‚Äôre done. Go ahead and import any of the libraries (eg. MongoKitten) in the app.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For MongoKitten, you make sure you enable Outgoing Connections in App Sandbox entitlements.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;updating-dependencies&quot;&gt;Updating dependencies&lt;/h3&gt;

&lt;p&gt;You have to run these 2 commands manually whenever you choose to update:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;swift package update
swift package generate-xcodeproj
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 22 Mar 2019 15:21:51 +0800</pubDate>
        <link>https://samwize.com/2019/03/22/integrate-swift-package-manager-for-ios-and-macos-projects/</link>
        <guid isPermaLink="true">https://samwize.com/2019/03/22/integrate-swift-package-manager-for-ios-and-macos-projects/</guid>
        
        
        <category>Swift</category>
        
      </item>
    
      <item>
        <title>Preprocessor Codes for Swift</title>
        <description>&lt;p&gt;I wrote about &lt;a href=&quot;/2014/05/22/create-multiple-targets-slash-apps-for-1-xcode-project/&quot;&gt;using Preprocessor Codes in 2014&lt;/a&gt;, and also all the way back in &lt;a href=&quot;https://blog.just2us.com/2009/07/tutorial-creating-multiple-targets-for-xcode-iphone-projects/&quot;&gt;2009&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is an update to using it in Swift (vs Objective-C days).&lt;/p&gt;

&lt;h2 id=&quot;debug-flag&quot;&gt;DEBUG flag&lt;/h2&gt;

&lt;p&gt;It is very common scenario where you want certain code to run only for the debug mode. For example &lt;a href=&quot;https://developers.google.com/admob/ios/mediation-test-suite&quot;&gt;Admob has a tool&lt;/a&gt; for debugging their SDK integrations.&lt;/p&gt;

&lt;p&gt;You want code like this:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#if DEBUG&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;GoogleMobileAdsMediationTestSuite&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;#if DEBUG&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;GoogleMobileAdsMediationTestSuite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;present&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;withAppID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;delegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;build-settings&quot;&gt;Build Settings&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;DEBUG&lt;/code&gt; flag is not automatically provided. Do not confuse with the debug build configuration.&lt;/p&gt;

&lt;p&gt;But we do want the debug build configuration to have the debug flag.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to &lt;strong&gt;Project &amp;gt; Build Settings &amp;gt; Other Swift Flags&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;-DDEBUG&lt;/code&gt; for the Debug build configuration&lt;/li&gt;
  &lt;li&gt;Do NOT add for the Release build configuration&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If your flag name is BANANA, then add &lt;code class=&quot;highlighter-rouge&quot;&gt;-DBANANA&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The biggest difference is that we now add to swift flags.&lt;/p&gt;

&lt;p&gt;For Objective-C, we add to &lt;strong&gt;Preprocessor Macros&lt;/strong&gt;. So if you do have Objective-C codes and want to use the same flag, then you must add to Preprocessor Macros too.&lt;/p&gt;

&lt;h2 id=&quot;what-about-cocoapods-library&quot;&gt;What about cocoapods library?&lt;/h2&gt;

&lt;p&gt;The Swift flag for a project or target will not apply to pods.&lt;/p&gt;

&lt;p&gt;You have to set it manually. But since every &lt;code class=&quot;highlighter-rouge&quot;&gt;pod install&lt;/code&gt; will reset your changes, you should add a post hook to &lt;code class=&quot;highlighter-rouge&quot;&gt;Podfile&lt;/code&gt; like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;post_install&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;installer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;installer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pods_project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;targets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Armchair'&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;build_configurations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Debug'&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;build_settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'OTHER_SWIFT_FLAGS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-DDebug'&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;build_settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'OTHER_SWIFT_FLAGS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You could add for every pods. In the config above, we add only for the pod &lt;a href=&quot;https://github.com/UrbanApps/Armchair&quot;&gt;Armchair&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Feb 2019 16:29:56 +0800</pubDate>
        <link>https://samwize.com/2019/02/26/preprocessor-codes-for-swift/</link>
        <guid isPermaLink="true">https://samwize.com/2019/02/26/preprocessor-codes-for-swift/</guid>
        
        
      </item>
    
      <item>
        <title>Rejection: App Name Not Good Enough</title>
        <description>&lt;p&gt;I have no shortage of rejections coming from Apple App Review team.&lt;/p&gt;

&lt;p&gt;Today, I encountered another strange one for &lt;a href=&quot;https://whereismymoney.app&quot;&gt;my upcoming app&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/rejection-mymoney-app-name.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;guideline-238---performance&quot;&gt;Guideline 2.3.8 - Performance&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;We noticed that your app name to be displayed on the App Store does not sufficiently match the name of the app displayed when installed on macOS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;iTunes Connect Name: &lt;strong&gt;Where Is My Money&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;App Name when Installed: &lt;strong&gt;My Money&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;App Name in About/Quit Menu: &lt;strong&gt;My Money&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don‚Äôt see how a different name will affect performance.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://developer.apple.com/app-store/review/guidelines/&quot;&gt;guideline&lt;/a&gt; for section 2.3 is for &lt;em&gt;Accurate Metadata&lt;/em&gt;, while 2.3.8 actually is for rating:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Metadata should be appropriate for all audiences, so make sure your app and in-app purchase icons, screenshots, and previews adhere to a 4+ age rating even if your app is rated higher. For example, if your app is a game that includes violence, select images that don‚Äôt depict a gruesome death or a gun pointed at a specific character. Use of terms like ‚ÄúFor Kids‚Äù and ‚ÄúFor Children‚Äù in app metadata is reserved for the Kids Category. Remember to ensure your metadata, including app name and icons (small, large, Apple Watch app, alternate icons, etc.), are similar to avoid creating confusion.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;App review is often subjective, as Apple reviewers‚Äô guideline is to make sure the names &lt;em&gt;sufficiently match&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;why-i-didnt-use-the-same-name&quot;&gt;Why I didn‚Äôt use the same name?&lt;/h2&gt;

&lt;p&gt;The reason that I did not use &lt;strong&gt;My Money&lt;/strong&gt; for the iTunes Connect Name (aka the App Store name) is because the name is unavailable.&lt;/p&gt;

&lt;p&gt;App Store name is on a first come first serve basis (or unless you have the trademark).&lt;/p&gt;

&lt;p&gt;I have a &lt;a href=&quot;https://just2us.com/torchlight/&quot;&gt;Torchlight&lt;/a&gt; app, and there are tons of competitors, and they keep coming, until Apple banned further Torchlight app from developers..&lt;/p&gt;

&lt;p&gt;But many developers are willing to add suffices to App Store name, because it has a big effect on search - App Store Optimization (ASO). Eg. ‚ÄúTorchlight - Brightest LED for iPhone &amp;amp; iPad‚Äù&lt;/p&gt;

&lt;p&gt;But few years ago, App Store added a &lt;strong&gt;slogan field&lt;/strong&gt;, and subsequently limit App Store name to only 30 char.&lt;/p&gt;

&lt;h2 id=&quot;what-is-app-name&quot;&gt;What is App Name&lt;/h2&gt;

&lt;p&gt;App Name is different from App Store name.&lt;/p&gt;

&lt;p&gt;It is explained in &lt;a href=&quot;https://developer.apple.com/library/archive/qa/qa1892/_index.html&quot;&gt;Technical Q&amp;amp;A QA1892&lt;/a&gt;. The name comes from &lt;code class=&quot;highlighter-rouge&quot;&gt;CFBundleDisplayName&lt;/code&gt;, for both app and extensions.&lt;/p&gt;

&lt;p&gt;The name is used to display the grid of apps on iOS device.&lt;/p&gt;

&lt;p&gt;For macOS, the name is also used in the standard About pane and menu.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Feb 2019 14:20:22 +0800</pubDate>
        <link>https://samwize.com/2019/02/24/rejection-app-name-not-good-enough/</link>
        <guid isPermaLink="true">https://samwize.com/2019/02/24/rejection-app-name-not-good-enough/</guid>
        
        
        <category>macOS</category>
        
        <category>App Review</category>
        
      </item>
    
  </channel>
</rss>
